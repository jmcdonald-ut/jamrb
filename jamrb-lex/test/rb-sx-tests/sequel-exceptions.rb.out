((Token ((1 0) on_ignored_nl "\n"))
 (Token ((2 0) on_comment "# frozen-string-literal: true\n"))
 (Token ((3 0) on_ignored_nl "\n"))
 (Token ((4 0) on_kw "module"))
 (Token ((4 6) on_sp " "))
 (Token ((4 7) on_const "Sequel"))
 (Token ((4 13) on_nl "\n"))
 (Token ((5 0) on_sp "  "))
 (Token
  ((5 2)
   on_comment
   "# The default exception class for exceptions raised by Sequel.\n"))
 (Token ((6 0) on_sp "  "))
 (Token
  ((6 2)
   on_comment
   "# All exception classes defined by Sequel are descendants of this class.\n"))
 (Token ((7 0) on_sp "  "))
 (Token ((7 2) on_kw "class"))
 (Token ((7 7) on_sp " "))
 (Token ((7 8) on_const "Error"))
 (Token ((7 13) on_sp " "))
 (Token ((7 14) on_op "<"))
 (Token ((7 15) on_sp " "))
 (Token ((7 16) on_op "::"))
 (Token ((7 18) on_const "StandardError"))
 (Token ((7 31) on_nl "\n"))
 (Token ((8 0) on_sp "    "))
 (Token
  ((8 4)
   on_comment
   "# If this exception wraps an underlying exception, the underlying\n"))
 (Token ((9 0) on_sp "    "))
 (Token ((9 4) on_comment "# exception is held here.\n"))
 (Token ((10 0) on_sp "    "))
 (Token ((10 4) on_ident "attr_accessor"))
 (Token ((10 17) on_sp " "))
 (Token ((10 18) on_symbeg ":"))
 (Token ((10 19) on_ident "wrapped_exception"))
 (Token ((10 36) on_nl "\n"))
 (Token ((11 0) on_sp "  "))
 (Token ((11 2) on_kw "end"))
 (Token ((11 5) on_nl "\n"))
 (Token ((12 0) on_ignored_nl "\n"))
 (Token ((13 0) on_sp "  "))
 (Token
  ((13 2)
   on_comment
   "# Error raised when the adapter requested doesn't exist or can't be loaded.\n"))
 (Token ((14 0) on_sp "  "))
 (Token ((14 2) on_const "AdapterNotFound"))
 (Token ((14 17) on_sp " "))
 (Token ((14 18) on_op "="))
 (Token ((14 19) on_sp " "))
 (Token ((14 20) on_const "Class"))
 (Token ((14 25) on_period "."))
 (Token ((14 26) on_ident "new"))
 (Token ((14 29) on_lparen "("))
 (Token ((14 30) on_const "Error"))
 (Token ((14 35) on_rparen ")"))
 (Token ((14 36) on_nl "\n"))
 (Token ((15 0) on_ignored_nl "\n"))
 (Token ((16 0) on_sp "  "))
 (Token
  ((16 2)
   on_comment
   "# Generic error raised by the database adapters, indicating a\n"))
 (Token ((17 0) on_sp "  "))
 (Token
  ((17 2)
   on_comment
   "# problem originating from the database server.  Usually raised\n"))
 (Token ((18 0) on_sp "  "))
 (Token ((18 2) on_comment "# because incorrect SQL syntax is used.\n"))
 (Token ((19 0) on_sp "  "))
 (Token ((19 2) on_const "DatabaseError"))
 (Token ((19 15) on_sp " "))
 (Token ((19 16) on_op "="))
 (Token ((19 17) on_sp " "))
 (Token ((19 18) on_const "Class"))
 (Token ((19 23) on_period "."))
 (Token ((19 24) on_ident "new"))
 (Token ((19 27) on_lparen "("))
 (Token ((19 28) on_const "Error"))
 (Token ((19 33) on_rparen ")"))
 (Token ((19 34) on_nl "\n"))
 (Token ((20 0) on_ignored_nl "\n"))
 (Token ((21 0) on_sp "  "))
 (Token
  ((21 2)
   on_comment
   "# Error raised when the Sequel is unable to connect to the database with the\n"))
 (Token ((22 0) on_sp "  "))
 (Token ((22 2) on_comment "# connection parameters it was given.\n"))
 (Token ((23 0) on_sp "  "))
 (Token ((23 2) on_const "DatabaseConnectionError"))
 (Token ((23 25) on_sp " "))
 (Token ((23 26) on_op "="))
 (Token ((23 27) on_sp " "))
 (Token ((23 28) on_const "Class"))
 (Token ((23 33) on_period "."))
 (Token ((23 34) on_ident "new"))
 (Token ((23 37) on_lparen "("))
 (Token ((23 38) on_const "DatabaseError"))
 (Token ((23 51) on_rparen ")"))
 (Token ((23 52) on_nl "\n"))
 (Token ((24 0) on_ignored_nl "\n"))
 (Token ((25 0) on_sp "  "))
 (Token
  ((25 2)
   on_comment
   "# Error raised by adapters when they determine that the connection\n"))
 (Token ((26 0) on_sp "  "))
 (Token
  ((26 2)
   on_comment
   "# to the database has been lost.  Instructs the connection pool code to\n"))
 (Token ((27 0) on_sp "  "))
 (Token
  ((27 2)
   on_comment
   "# remove that connection from the pool so that other connections can be acquired\n"))
 (Token ((28 0) on_sp "  "))
 (Token ((28 2) on_comment "# automatically.\n"))
 (Token ((29 0) on_sp "  "))
 (Token ((29 2) on_const "DatabaseDisconnectError"))
 (Token ((29 25) on_sp " "))
 (Token ((29 26) on_op "="))
 (Token ((29 27) on_sp " "))
 (Token ((29 28) on_const "Class"))
 (Token ((29 33) on_period "."))
 (Token ((29 34) on_ident "new"))
 (Token ((29 37) on_lparen "("))
 (Token ((29 38) on_const "DatabaseError"))
 (Token ((29 51) on_rparen ")"))
 (Token ((29 52) on_nl "\n"))
 (Token ((30 0) on_ignored_nl "\n"))
 (Token ((31 0) on_sp "  "))
 (Token
  ((31 2)
   on_comment
   "# Generic error raised when Sequel determines a database constraint has been violated.\n"))
 (Token ((32 0) on_sp "  "))
 (Token ((32 2) on_const "ConstraintViolation"))
 (Token ((32 21) on_sp " "))
 (Token ((32 22) on_op "="))
 (Token ((32 23) on_sp " "))
 (Token ((32 24) on_const "Class"))
 (Token ((32 29) on_period "."))
 (Token ((32 30) on_ident "new"))
 (Token ((32 33) on_lparen "("))
 (Token ((32 34) on_const "DatabaseError"))
 (Token ((32 47) on_rparen ")"))
 (Token ((32 48) on_nl "\n"))
 (Token ((33 0) on_ignored_nl "\n"))
 (Token ((34 0) on_sp "  "))
 (Token
  ((34 2)
   on_comment
   "# Error raised when Sequel determines a database check constraint has been violated.\n"))
 (Token ((35 0) on_sp "  "))
 (Token ((35 2) on_const "CheckConstraintViolation"))
 (Token ((35 26) on_sp " "))
 (Token ((35 27) on_op "="))
 (Token ((35 28) on_sp " "))
 (Token ((35 29) on_const "Class"))
 (Token ((35 34) on_period "."))
 (Token ((35 35) on_ident "new"))
 (Token ((35 38) on_lparen "("))
 (Token ((35 39) on_const "ConstraintViolation"))
 (Token ((35 58) on_rparen ")"))
 (Token ((35 59) on_nl "\n"))
 (Token ((36 0) on_ignored_nl "\n"))
 (Token ((37 0) on_sp "  "))
 (Token
  ((37 2)
   on_comment
   "# Error raised when Sequel determines a database foreign key constraint has been violated.\n"))
 (Token ((38 0) on_sp "  "))
 (Token ((38 2) on_const "ForeignKeyConstraintViolation"))
 (Token ((38 31) on_sp " "))
 (Token ((38 32) on_op "="))
 (Token ((38 33) on_sp " "))
 (Token ((38 34) on_const "Class"))
 (Token ((38 39) on_period "."))
 (Token ((38 40) on_ident "new"))
 (Token ((38 43) on_lparen "("))
 (Token ((38 44) on_const "ConstraintViolation"))
 (Token ((38 63) on_rparen ")"))
 (Token ((38 64) on_nl "\n"))
 (Token ((39 0) on_ignored_nl "\n"))
 (Token ((40 0) on_sp "  "))
 (Token
  ((40 2)
   on_comment
   "# Error raised when Sequel determines a database NOT NULL constraint has been violated.\n"))
 (Token ((41 0) on_sp "  "))
 (Token ((41 2) on_const "NotNullConstraintViolation"))
 (Token ((41 28) on_sp " "))
 (Token ((41 29) on_op "="))
 (Token ((41 30) on_sp " "))
 (Token ((41 31) on_const "Class"))
 (Token ((41 36) on_period "."))
 (Token ((41 37) on_ident "new"))
 (Token ((41 40) on_lparen "("))
 (Token ((41 41) on_const "ConstraintViolation"))
 (Token ((41 60) on_rparen ")"))
 (Token ((41 61) on_nl "\n"))
 (Token ((42 0) on_ignored_nl "\n"))
 (Token ((43 0) on_sp "  "))
 (Token
  ((43 2)
   on_comment
   "# Error raised when Sequel determines a database unique constraint has been violated.\n"))
 (Token ((44 0) on_sp "  "))
 (Token ((44 2) on_const "UniqueConstraintViolation"))
 (Token ((44 27) on_sp " "))
 (Token ((44 28) on_op "="))
 (Token ((44 29) on_sp " "))
 (Token ((44 30) on_const "Class"))
 (Token ((44 35) on_period "."))
 (Token ((44 36) on_ident "new"))
 (Token ((44 39) on_lparen "("))
 (Token ((44 40) on_const "ConstraintViolation"))
 (Token ((44 59) on_rparen ")"))
 (Token ((44 60) on_nl "\n"))
 (Token ((45 0) on_ignored_nl "\n"))
 (Token ((46 0) on_sp "  "))
 (Token
  ((46 2)
   on_comment
   "# Error raised when Sequel determines a serialization failure/deadlock in the database.\n"))
 (Token ((47 0) on_sp "  "))
 (Token ((47 2) on_const "SerializationFailure"))
 (Token ((47 22) on_sp " "))
 (Token ((47 23) on_op "="))
 (Token ((47 24) on_sp " "))
 (Token ((47 25) on_const "Class"))
 (Token ((47 30) on_period "."))
 (Token ((47 31) on_ident "new"))
 (Token ((47 34) on_lparen "("))
 (Token ((47 35) on_const "DatabaseError"))
 (Token ((47 48) on_rparen ")"))
 (Token ((47 49) on_nl "\n"))
 (Token ((48 0) on_ignored_nl "\n"))
 (Token ((49 0) on_sp "  "))
 (Token
  ((49 2)
   on_comment
   "# Error raised on an invalid operation, such as trying to update or delete\n"))
 (Token ((50 0) on_sp "  "))
 (Token ((50 2) on_comment "# a joined or grouped dataset.\n"))
 (Token ((51 0) on_sp "  "))
 (Token ((51 2) on_const "InvalidOperation"))
 (Token ((51 18) on_sp " "))
 (Token ((51 19) on_op "="))
 (Token ((51 20) on_sp " "))
 (Token ((51 21) on_const "Class"))
 (Token ((51 26) on_period "."))
 (Token ((51 27) on_ident "new"))
 (Token ((51 30) on_lparen "("))
 (Token ((51 31) on_const "Error"))
 (Token ((51 36) on_rparen ")"))
 (Token ((51 37) on_nl "\n"))
 (Token ((52 0) on_ignored_nl "\n"))
 (Token ((53 0) on_sp "  "))
 (Token
  ((53 2)
   on_comment
   "# Error raised when attempting an invalid type conversion.\n"))
 (Token ((54 0) on_sp "  "))
 (Token ((54 2) on_const "InvalidValue"))
 (Token ((54 14) on_sp " "))
 (Token ((54 15) on_op "="))
 (Token ((54 16) on_sp " "))
 (Token ((54 17) on_const "Class"))
 (Token ((54 22) on_period "."))
 (Token ((54 23) on_ident "new"))
 (Token ((54 26) on_lparen "("))
 (Token ((54 27) on_const "Error"))
 (Token ((54 32) on_rparen ")"))
 (Token ((54 33) on_nl "\n"))
 (Token ((55 0) on_ignored_nl "\n"))
 (Token ((56 0) on_sp "  "))
 (Token
  ((56 2)
   on_comment
   "# Error raised when the user requests a record via the first! or similar\n"))
 (Token ((57 0) on_sp "  "))
 (Token
  ((57 2) on_comment "# method, and the dataset does not yield any rows.\n"))
 (Token ((58 0) on_sp "  "))
 (Token ((58 2) on_kw "class"))
 (Token ((58 7) on_sp " "))
 (Token ((58 8) on_const "NoMatchingRow"))
 (Token ((58 21) on_sp " "))
 (Token ((58 22) on_op "<"))
 (Token ((58 23) on_sp " "))
 (Token ((58 24) on_const "Error"))
 (Token ((58 29) on_nl "\n"))
 (Token ((59 0) on_sp "    "))
 (Token
  ((59 4)
   on_comment
   "# The dataset that raised this NoMatchingRow exception.\n"))
 (Token ((60 0) on_sp "    "))
 (Token ((60 4) on_ident "attr_accessor"))
 (Token ((60 17) on_sp " "))
 (Token ((60 18) on_symbeg ":"))
 (Token ((60 19) on_ident "dataset"))
 (Token ((60 26) on_nl "\n"))
 (Token ((61 0) on_ignored_nl "\n"))
 (Token ((62 0) on_sp "    "))
 (Token
  ((62 4)
   on_comment
   "# If the first argument is a Sequel::Dataset, set the dataset related to\n"))
 (Token ((63 0) on_sp "    "))
 (Token
  ((63 4)
   on_comment
   "# the exception to that argument, instead of assuming it is the exception message.\n"))
 (Token ((64 0) on_sp "    "))
 (Token ((64 4) on_kw "def"))
 (Token ((64 7) on_sp " "))
 (Token ((64 8) on_ident "initialize"))
 (Token ((64 18) on_lparen "("))
 (Token ((64 19) on_ident "msg"))
 (Token ((64 22) on_op "="))
 (Token ((64 23) on_kw "nil"))
 (Token ((64 26) on_rparen ")"))
 (Token ((64 27) on_ignored_nl "\n"))
 (Token ((65 0) on_sp "      "))
 (Token ((65 6) on_kw "if"))
 (Token ((65 8) on_sp " "))
 (Token ((65 9) on_ident "msg"))
 (Token ((65 12) on_period "."))
 (Token ((65 13) on_ident "is_a?"))
 (Token ((65 18) on_lparen "("))
 (Token ((65 19) on_const "Sequel"))
 (Token ((65 25) on_op "::"))
 (Token ((65 27) on_const "Dataset"))
 (Token ((65 34) on_rparen ")"))
 (Token ((65 35) on_nl "\n"))
 (Token ((66 0) on_sp "        "))
 (Token ((66 8) on_ivar "@dataset"))
 (Token ((66 16) on_sp " "))
 (Token ((66 17) on_op "="))
 (Token ((66 18) on_sp " "))
 (Token ((66 19) on_ident "msg"))
 (Token ((66 22) on_nl "\n"))
 (Token ((67 0) on_sp "        "))
 (Token ((67 8) on_ident "msg"))
 (Token ((67 11) on_sp " "))
 (Token ((67 12) on_op "="))
 (Token ((67 13) on_sp " "))
 (Token ((67 14) on_kw "nil"))
 (Token ((67 17) on_nl "\n"))
 (Token ((68 0) on_sp "      "))
 (Token ((68 6) on_kw "end"))
 (Token ((68 9) on_nl "\n"))
 (Token ((69 0) on_sp "      "))
 (Token ((69 6) on_kw "super"))
 (Token ((69 11) on_nl "\n"))
 (Token ((70 0) on_sp "    "))
 (Token ((70 4) on_kw "end"))
 (Token ((70 7) on_nl "\n"))
 (Token ((71 0) on_sp "  "))
 (Token ((71 2) on_kw "end"))
 (Token ((71 5) on_nl "\n"))
 (Token ((72 0) on_ignored_nl "\n"))
 (Token ((73 0) on_sp "  "))
 (Token
  ((73 2)
   on_comment
   "# Error raised when the connection pool cannot acquire a database connection\n"))
 (Token ((74 0) on_sp "  "))
 (Token ((74 2) on_comment "# before the timeout.\n"))
 (Token ((75 0) on_sp "  "))
 (Token ((75 2) on_const "PoolTimeout"))
 (Token ((75 13) on_sp " "))
 (Token ((75 14) on_op "="))
 (Token ((75 15) on_sp " "))
 (Token ((75 16) on_const "Class"))
 (Token ((75 21) on_period "."))
 (Token ((75 22) on_ident "new"))
 (Token ((75 25) on_lparen "("))
 (Token ((75 26) on_const "Error"))
 (Token ((75 31) on_rparen ")"))
 (Token ((75 32) on_nl "\n"))
 (Token ((76 0) on_ignored_nl "\n"))
 (Token ((77 0) on_sp "  "))
 (Token
  ((77 2)
   on_comment
   "# Error that you should raise to signal a rollback of the current transaction.\n"))
 (Token ((78 0) on_sp "  "))
 (Token
  ((78 2)
   on_comment
   "# The transaction block will catch this exception, rollback the current transaction,\n"))
 (Token ((79 0) on_sp "  "))
 (Token
  ((79 2)
   on_comment
   "# and won't reraise it (unless a reraise is requested).\n"))
 (Token ((80 0) on_sp "  "))
 (Token ((80 2) on_const "Rollback"))
 (Token ((80 10) on_sp " "))
 (Token ((80 11) on_op "="))
 (Token ((80 12) on_sp " "))
 (Token ((80 13) on_const "Class"))
 (Token ((80 18) on_period "."))
 (Token ((80 19) on_ident "new"))
 (Token ((80 22) on_lparen "("))
 (Token ((80 23) on_const "Error"))
 (Token ((80 28) on_rparen ")"))
 (Token ((80 29) on_nl "\n"))
 (Token ((81 0) on_ignored_nl "\n"))
 (Token ((82 0) on_sp "  "))
 (Token
  ((82 2)
   on_comment
   "# Error raised when unbinding a dataset that has multiple different values\n"))
 (Token ((83 0) on_sp "  "))
 (Token ((83 2) on_comment "# for a given variable.\n"))
 (Token ((84 0) on_sp "  "))
 (Token ((84 2) on_const "UnbindDuplicate"))
 (Token ((84 17) on_sp " "))
 (Token ((84 18) on_op "="))
 (Token ((84 19) on_sp " "))
 (Token ((84 20) on_const "Class"))
 (Token ((84 25) on_period "."))
 (Token ((84 26) on_ident "new"))
 (Token ((84 29) on_lparen "("))
 (Token ((84 30) on_const "Error"))
 (Token ((84 35) on_rparen ")"))
 (Token ((84 36) on_nl "\n"))
 (Token ((85 0) on_ignored_nl "\n"))
 (Token ((86 0) on_sp "  "))
 (Token
  ((86 2)
   on_comment
   "# Call name on each class to set the name for the class, so it gets cached.\n"))
 (Token ((87 0) on_sp "  "))
 (Token ((87 2) on_ident "constants"))
 (Token ((87 11) on_period "."))
 (Token ((87 12) on_ident "map"))
 (Token ((87 15) on_lbrace "{"))
 (Token ((87 16) on_op "|"))
 (Token ((87 17) on_ident "c"))
 (Token ((87 18) on_op "|"))
 (Token ((87 19) on_sp " "))
 (Token ((87 20) on_ident "const_get"))
 (Token ((87 29) on_lparen "("))
 (Token ((87 30) on_ident "c"))
 (Token ((87 31) on_rparen ")"))
 (Token ((87 32) on_rbrace "}"))
 (Token ((87 33) on_period "."))
 (Token ((87 34) on_ident "each"))
 (Token ((87 38) on_sp " "))
 (Token ((87 39) on_kw "do"))
 (Token ((87 41) on_sp " "))
 (Token ((87 42) on_op "|"))
 (Token ((87 43) on_ident "c"))
 (Token ((87 44) on_op "|"))
 (Token ((87 45) on_ignored_nl "\n"))
 (Token ((88 0) on_sp "    "))
 (Token ((88 4) on_const "Class"))
 (Token ((88 9) on_sp " "))
 (Token ((88 10) on_op "==="))
 (Token ((88 13) on_sp " "))
 (Token ((88 14) on_ident "c"))
 (Token ((88 15) on_sp " "))
 (Token ((88 16) on_op "&&"))
 (Token ((88 18) on_sp " "))
 (Token ((88 19) on_ident "c"))
 (Token ((88 20) on_period "."))
 (Token ((88 21) on_ident "name"))
 (Token ((88 25) on_nl "\n"))
 (Token ((89 0) on_sp "  "))
 (Token ((89 2) on_kw "end"))
 (Token ((89 5) on_nl "\n"))
 (Token ((90 0) on_ignored_nl "\n"))
 (Token ((91 0) on_sp "  "))
 (Token ((91 2) on_const "Error"))
 (Token ((91 7) on_op "::"))
 (Token ((91 9) on_const "AdapterNotFound"))
 (Token ((91 24) on_sp " "))
 (Token ((91 25) on_op "="))
 (Token ((91 26) on_sp " "))
 (Token ((91 27) on_const "AdapterNotFound"))
 (Token ((91 42) on_nl "\n"))
 (Token ((92 0) on_sp "  "))
 (Token ((92 2) on_const "Error"))
 (Token ((92 7) on_op "::"))
 (Token ((92 9) on_const "InvalidOperation"))
 (Token ((92 25) on_sp " "))
 (Token ((92 26) on_op "="))
 (Token ((92 27) on_sp " "))
 (Token ((92 28) on_const "InvalidOperation"))
 (Token ((92 44) on_nl "\n"))
 (Token ((93 0) on_sp "  "))
 (Token ((93 2) on_const "Error"))
 (Token ((93 7) on_op "::"))
 (Token ((93 9) on_const "InvalidValue"))
 (Token ((93 21) on_sp " "))
 (Token ((93 22) on_op "="))
 (Token ((93 23) on_sp " "))
 (Token ((93 24) on_const "InvalidValue"))
 (Token ((93 36) on_nl "\n"))
 (Token ((94 0) on_sp "  "))
 (Token ((94 2) on_const "Error"))
 (Token ((94 7) on_op "::"))
 (Token ((94 9) on_const "PoolTimeoutError"))
 (Token ((94 25) on_sp " "))
 (Token ((94 26) on_op "="))
 (Token ((94 27) on_sp " "))
 (Token ((94 28) on_const "PoolTimeout"))
 (Token ((94 39) on_nl "\n"))
 (Token ((95 0) on_sp "  "))
 (Token ((95 2) on_const "Error"))
 (Token ((95 7) on_op "::"))
 (Token ((95 9) on_const "Rollback"))
 (Token ((95 17) on_sp " "))
 (Token ((95 18) on_op "="))
 (Token ((95 19) on_sp " "))
 (Token ((95 20) on_const "Rollback"))
 (Token ((95 28) on_nl "\n"))
 (Token ((96 0) on_kw "end"))
 (Token ((96 3) on_nl "\n")))

((Token ((1 0) on_ident "foo"))
 (Token ((1 3) on_comma ","))
 (Token ((1 4) on_sp " "))
 (Token ((1 5) on_ident "baz"))
 (Token ((1 8) on_comma ","))
 (Token ((1 9) on_sp " "))
 (Token ((1 10) on_ident "bar"))
 (Token ((1 13) on_sp " "))
 (Token ((1 14) on_op "="))
 (Token ((1 15) on_sp " "))
 (Token ((1 16) on_lbracket "["))
 (Token ((1 17) on_int "1"))
 (Token ((1 18) on_comma ","))
 (Token ((1 19) on_sp " "))
 (Token ((1 20) on_int "2"))
 (Token ((1 21) on_comma ","))
 (Token ((1 22) on_sp " "))
 (Token ((1 23) on_int "3"))
 (Token ((1 24) on_rbracket "]"))
 (Token ((1 25) on_sp " "))
 (Token ((1 26) on_comment "# foo = 1, baz = 2, bar = 3\n"))
 (Token ((2 0) on_ident "arr"))
 (Token ((2 3) on_sp " "))
 (Token ((2 4) on_op "="))
 (Token ((2 5) on_sp " "))
 (Token ((2 6) on_int "1"))
 (Token ((2 7) on_comma ","))
 (Token ((2 8) on_sp " "))
 (Token ((2 9) on_int "2"))
 (Token ((2 10) on_comma ","))
 (Token ((2 11) on_sp " "))
 (Token ((2 12) on_int "3"))
 (Token ((2 13) on_comma ","))
 (Token ((2 14) on_sp " "))
 (Token ((2 15) on_int "4"))
 (Token ((2 16) on_comma ","))
 (Token ((2 17) on_sp " "))
 (Token ((2 18) on_int "5"))
 (Token ((2 19) on_comma ","))
 (Token ((2 20) on_sp " "))
 (Token ((2 21) on_int "6"))
 (Token ((2 22) on_nl "\n"))
 (Token ((3 0) on_ignored_nl "\n"))
 (Token ((4 0) on_ident "a"))
 (Token ((4 1) on_comma ","))
 (Token ((4 2) on_sp " "))
 (Token ((4 3) on_ident "b"))
 (Token ((4 4) on_comma ","))
 (Token ((4 5) on_sp " "))
 (Token ((4 6) on_op "*"))
 (Token ((4 7) on_ident "c"))
 (Token ((4 8) on_comma ","))
 (Token ((4 9) on_sp " "))
 (Token ((4 10) on_ident "d"))
 (Token ((4 11) on_sp " "))
 (Token ((4 12) on_op "="))
 (Token ((4 13) on_sp " "))
 (Token ((4 14) on_lbracket "["))
 (Token ((4 15) on_int "1"))
 (Token ((4 16) on_comma ","))
 (Token ((4 17) on_sp " "))
 (Token ((4 18) on_int "2"))
 (Token ((4 19) on_comma ","))
 (Token ((4 20) on_sp " "))
 (Token ((4 21) on_int "3"))
 (Token ((4 22) on_comma ","))
 (Token ((4 23) on_sp " "))
 (Token ((4 24) on_int "4"))
 (Token ((4 25) on_comma ","))
 (Token ((4 26) on_sp " "))
 (Token ((4 27) on_int "5"))
 (Token ((4 28) on_comma ","))
 (Token ((4 29) on_sp " "))
 (Token ((4 30) on_int "6"))
 (Token ((4 31) on_rbracket "]"))
 (Token ((4 32) on_nl "\n"))
 (Token ((5 0) on_ignored_nl "\n"))
 (Token ((6 0) on_comment "# Decomposition\n"))
 (Token ((7 0) on_ident "jon"))
 (Token ((7 3) on_comma ","))
 (Token ((7 4) on_sp " "))
 (Token ((7 5) on_lparen "("))
 (Token ((7 6) on_ident "alexander"))
 (Token ((7 15) on_comma ","))
 (Token ((7 16) on_sp " "))
 (Token ((7 17) on_ident "mcdonald"))
 (Token ((7 25) on_rparen ")"))
 (Token ((7 26) on_comma ","))
 (Token ((7 27) on_sp " "))
 (Token ((7 28) on_ident "jam"))
 (Token ((7 31) on_sp " "))
 (Token ((7 32) on_op "="))
 (Token ((7 33) on_sp " "))
 (Token ((7 34) on_int "1"))
 (Token ((7 35) on_comma ","))
 (Token ((7 36) on_sp " "))
 (Token ((7 37) on_lbracket "["))
 (Token ((7 38) on_int "2"))
 (Token ((7 39) on_comma ","))
 (Token ((7 40) on_sp " "))
 (Token ((7 41) on_int "3"))
 (Token ((7 42) on_comma ","))
 (Token ((7 43) on_sp " "))
 (Token ((7 44) on_int "5"))
 (Token ((7 45) on_comma ","))
 (Token ((7 46) on_sp " "))
 (Token ((7 47) on_int "6"))
 (Token ((7 48) on_rbracket "]"))
 (Token ((7 49) on_comma ","))
 (Token ((7 50) on_sp " "))
 (Token ((7 51) on_int "4"))
 (Token ((7 52) on_nl "\n"))
 (Token ((8 0) on_ident "billy"))
 (Token ((8 5) on_comma ","))
 (Token ((8 6) on_sp " "))
 (Token ((8 7) on_lparen "("))
 (Token ((8 8) on_ident "bob"))
 (Token ((8 11) on_comma ","))
 (Token ((8 12) on_sp " "))
 (Token ((8 13) on_ident "sam"))
 (Token ((8 16) on_rparen ")"))
 (Token ((8 17) on_comma ","))
 (Token ((8 18) on_sp " "))
 (Token ((8 19) on_op "*"))
 (Token ((8 20) on_ident "joel"))
 (Token ((8 24) on_sp " "))
 (Token ((8 25) on_op "="))
 (Token ((8 26) on_sp " "))
 (Token ((8 27) on_int "1"))
 (Token ((8 28) on_comma ","))
 (Token ((8 29) on_sp " "))
 (Token ((8 30) on_lbracket "["))
 (Token ((8 31) on_int "2"))
 (Token ((8 32) on_comma ","))
 (Token ((8 33) on_sp " "))
 (Token ((8 34) on_int "3"))
 (Token ((8 35) on_comma ","))
 (Token ((8 36) on_sp " "))
 (Token ((8 37) on_int "5"))
 (Token ((8 38) on_comma ","))
 (Token ((8 39) on_sp " "))
 (Token ((8 40) on_int "6"))
 (Token ((8 41) on_rbracket "]"))
 (Token ((8 42) on_comma ","))
 (Token ((8 43) on_sp " "))
 (Token ((8 44) on_int "4"))
 (Token ((8 45) on_nl "\n"))
 (Token ((9 0) on_ident "walt"))
 (Token ((9 4) on_comma ","))
 (Token ((9 5) on_sp " "))
 (Token ((9 6) on_lparen "("))
 (Token ((9 7) on_ident "mickey"))
 (Token ((9 13) on_comma ","))
 (Token ((9 14) on_sp " "))
 (Token ((9 15) on_op "*"))
 (Token ((9 16) on_ident "mouse"))
 (Token ((9 21) on_rparen ")"))
 (Token ((9 22) on_comma ","))
 (Token ((9 23) on_sp " "))
 (Token ((9 24) on_op "*"))
 (Token ((9 25) on_ident "frank"))
 (Token ((9 30) on_sp " "))
 (Token ((9 31) on_op "="))
 (Token ((9 32) on_sp " "))
 (Token ((9 33) on_int "1"))
 (Token ((9 34) on_comma ","))
 (Token ((9 35) on_sp " "))
 (Token ((9 36) on_lbracket "["))
 (Token ((9 37) on_int "2"))
 (Token ((9 38) on_comma ","))
 (Token ((9 39) on_sp " "))
 (Token ((9 40) on_int "3"))
 (Token ((9 41) on_comma ","))
 (Token ((9 42) on_sp " "))
 (Token ((9 43) on_int "4"))
 (Token ((9 44) on_comma ","))
 (Token ((9 45) on_sp " "))
 (Token ((9 46) on_int "5"))
 (Token ((9 47) on_comma ","))
 (Token ((9 48) on_sp " "))
 (Token ((9 49) on_int "6"))
 (Token ((9 50) on_comma ","))
 (Token ((9 51) on_sp " "))
 (Token ((9 52) on_int "7"))
 (Token ((9 53) on_rbracket "]"))
 (Token ((9 54) on_comma ","))
 (Token ((9 55) on_sp " "))
 (Token ((9 56) on_int "9"))
 (Token ((9 57) on_comma ","))
 (Token ((9 58) on_sp " "))
 (Token ((9 59) on_int "9"))
 (Token ((9 60) on_comma ","))
 (Token ((9 61) on_sp " "))
 (Token ((9 62) on_int "10"))
 (Token ((9 64) on_nl "\n"))
 (Token ((10 0) on_ident "oh"))
 (Token ((10 2) on_comma ","))
 (Token ((10 3) on_sp " "))
 (Token ((10 4) on_lparen "("))
 (Token ((10 5) on_ident "so"))
 (Token ((10 7) on_comma ","))
 (Token ((10 8) on_sp " "))
 (Token ((10 9) on_ident "it"))
 (Token ((10 11) on_rparen ")"))
 (Token ((10 12) on_comma ","))
 (Token ((10 13) on_sp " "))
 (Token ((10 14) on_op "*"))
 (Token ((10 15) on_ident "has"))
 (Token ((10 18) on_sp " "))
 (Token ((10 19) on_op "="))
 (Token ((10 20) on_sp " "))
 (Token ((10 21) on_int "1"))
 (Token ((10 22) on_comma ","))
 (Token ((10 23) on_sp " "))
 (Token ((10 24) on_lbracket "["))
 (Token ((10 25) on_int "2"))
 (Token ((10 26) on_comma ","))
 (Token ((10 27) on_sp " "))
 (Token ((10 28) on_int "3"))
 (Token ((10 29) on_rbracket "]"))
 (Token ((10 30) on_nl "\n"))
 (Token ((11 0) on_ignored_nl "\n"))
 (Token ((12 0) on_comment "# Splat!\n"))
 (Token ((13 0) on_ident "e"))
 (Token ((13 1) on_sp " "))
 (Token ((13 2) on_op "="))
 (Token ((13 3) on_sp " "))
 (Token ((13 4) on_op "*"))
 (Token ((13 5) on_lbracket "["))
 (Token ((13 6) on_int "1"))
 (Token ((13 7) on_comma ","))
 (Token ((13 8) on_sp " "))
 (Token ((13 9) on_int "2"))
 (Token ((13 10) on_comma ","))
 (Token ((13 11) on_sp " "))
 (Token ((13 12) on_int "3"))
 (Token ((13 13) on_rbracket "]"))
 (Token ((13 14) on_sp " "))
 (Token ((13 15) on_comment "# ironically sets `e` to [1, 2, 3]\n")))

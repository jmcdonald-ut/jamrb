((Token ((1 0) on_ident "require"))
 (Token ((1 7) on_sp " "))
 (Token ((1 8) on_tstring_beg "'"))
 (Token ((1 9) on_tstring_content "logger"))
 (Token ((1 15) on_tstring_end "'"))
 (Token ((1 16) on_nl "\n"))
 (Token ((2 0) on_ident "require"))
 (Token ((2 7) on_sp " "))
 (Token ((2 8) on_tstring_beg "'"))
 (Token ((2 9) on_tstring_content "optparse"))
 (Token ((2 17) on_tstring_end "'"))
 (Token ((2 18) on_nl "\n"))
 (Token ((3 0) on_ident "require"))
 (Token ((3 7) on_sp " "))
 (Token ((3 8) on_tstring_beg "'"))
 (Token ((3 9) on_tstring_content "yaml"))
 (Token ((3 13) on_tstring_end "'"))
 (Token ((3 14) on_nl "\n"))
 (Token ((4 0) on_ignored_nl "\n"))
 (Token ((5 0) on_kw "module"))
 (Token ((5 6) on_sp " "))
 (Token ((5 7) on_const "Thin"))
 (Token ((5 11) on_nl "\n"))
 (Token ((6 0) on_sp "  "))
 (Token ((6 2) on_comment "# CLI runner.\n"))
 (Token ((7 0) on_sp "  "))
 (Token
  ((7 2)
   on_comment
   "# Parse options and send command to the correct Controller.\n"))
 (Token ((8 0) on_sp "  "))
 (Token ((8 2) on_kw "class"))
 (Token ((8 7) on_sp " "))
 (Token ((8 8) on_const "Runner"))
 (Token ((8 14) on_nl "\n"))
 (Token ((9 0) on_sp "    "))
 (Token ((9 4) on_const "COMMANDS"))
 (Token ((9 12) on_sp "            "))
 (Token ((9 24) on_op "="))
 (Token ((9 25) on_sp " "))
 (Token ((9 26) on_qwords_beg "%w("))
 (Token ((9 29) on_tstring_content "start"))
 (Token ((9 34) on_words_sep " "))
 (Token ((9 35) on_tstring_content "stop"))
 (Token ((9 39) on_words_sep " "))
 (Token ((9 40) on_tstring_content "restart"))
 (Token ((9 47) on_words_sep " "))
 (Token ((9 48) on_tstring_content "config"))
 (Token ((9 54) on_words_sep ")"))
 (Token ((9 55) on_nl "\n"))
 (Token ((10 0) on_sp "    "))
 (Token ((10 4) on_const "LINUX_ONLY_COMMANDS"))
 (Token ((10 23) on_sp " "))
 (Token ((10 24) on_op "="))
 (Token ((10 25) on_sp " "))
 (Token ((10 26) on_qwords_beg "%w("))
 (Token ((10 29) on_tstring_content "install"))
 (Token ((10 36) on_words_sep ")"))
 (Token ((10 37) on_nl "\n"))
 (Token ((11 0) on_ignored_nl "\n"))
 (Token ((12 0) on_sp "    "))
 (Token
  ((12 4)
   on_comment
   "# Commands that wont load options from the config file\n"))
 (Token ((13 0) on_sp "    "))
 (Token ((13 4) on_const "CONFIGLESS_COMMANDS"))
 (Token ((13 23) on_sp " "))
 (Token ((13 24) on_op "="))
 (Token ((13 25) on_sp " "))
 (Token ((13 26) on_qwords_beg "%w("))
 (Token ((13 29) on_tstring_content "config"))
 (Token ((13 35) on_words_sep " "))
 (Token ((13 36) on_tstring_content "install"))
 (Token ((13 43) on_words_sep ")"))
 (Token ((13 44) on_nl "\n"))
 (Token ((14 0) on_ignored_nl "\n"))
 (Token ((15 0) on_sp "    "))
 (Token ((15 4) on_comment "# Parsed options\n"))
 (Token ((16 0) on_sp "    "))
 (Token ((16 4) on_ident "attr_accessor"))
 (Token ((16 17) on_sp " "))
 (Token ((16 18) on_symbeg ":"))
 (Token ((16 19) on_ident "options"))
 (Token ((16 26) on_nl "\n"))
 (Token ((17 0) on_ignored_nl "\n"))
 (Token ((18 0) on_sp "    "))
 (Token ((18 4) on_comment "# Name of the command to be runned.\n"))
 (Token ((19 0) on_sp "    "))
 (Token ((19 4) on_ident "attr_accessor"))
 (Token ((19 17) on_sp " "))
 (Token ((19 18) on_symbeg ":"))
 (Token ((19 19) on_ident "command"))
 (Token ((19 26) on_nl "\n"))
 (Token ((20 0) on_ignored_nl "\n"))
 (Token ((21 0) on_sp "    "))
 (Token ((21 4) on_comment "# Arguments to be passed to the command.\n"))
 (Token ((22 0) on_sp "    "))
 (Token ((22 4) on_ident "attr_accessor"))
 (Token ((22 17) on_sp " "))
 (Token ((22 18) on_symbeg ":"))
 (Token ((22 19) on_ident "arguments"))
 (Token ((22 28) on_nl "\n"))
 (Token ((23 0) on_ignored_nl "\n"))
 (Token ((24 0) on_sp "    "))
 (Token ((24 4) on_comment "# Return all available commands\n"))
 (Token ((25 0) on_sp "    "))
 (Token ((25 4) on_kw "def"))
 (Token ((25 7) on_sp " "))
 (Token ((25 8) on_kw "self"))
 (Token ((25 12) on_period "."))
 (Token ((25 13) on_ident "commands"))
 (Token ((25 21) on_nl "\n"))
 (Token ((26 0) on_sp "      "))
 (Token ((26 6) on_ident "commands"))
 (Token ((26 14) on_sp "  "))
 (Token ((26 16) on_op "="))
 (Token ((26 17) on_sp " "))
 (Token ((26 18) on_const "COMMANDS"))
 (Token ((26 26) on_nl "\n"))
 (Token ((27 0) on_sp "      "))
 (Token ((27 6) on_ident "commands"))
 (Token ((27 14) on_sp " "))
 (Token ((27 15) on_op "+="))
 (Token ((27 17) on_sp " "))
 (Token ((27 18) on_const "LINUX_ONLY_COMMANDS"))
 (Token ((27 37) on_sp " "))
 (Token ((27 38) on_kw "if"))
 (Token ((27 40) on_sp " "))
 (Token ((27 41) on_const "Thin"))
 (Token ((27 45) on_period "."))
 (Token ((27 46) on_ident "linux?"))
 (Token ((27 52) on_nl "\n"))
 (Token ((28 0) on_sp "      "))
 (Token ((28 6) on_ident "commands"))
 (Token ((28 14) on_nl "\n"))
 (Token ((29 0) on_sp "    "))
 (Token ((29 4) on_kw "end"))
 (Token ((29 7) on_nl "\n"))
 (Token ((30 0) on_ignored_nl "\n"))
 (Token ((31 0) on_sp "    "))
 (Token ((31 4) on_kw "def"))
 (Token ((31 7) on_sp " "))
 (Token ((31 8) on_ident "initialize"))
 (Token ((31 18) on_lparen "("))
 (Token ((31 19) on_ident "argv"))
 (Token ((31 23) on_rparen ")"))
 (Token ((31 24) on_ignored_nl "\n"))
 (Token ((32 0) on_sp "      "))
 (Token ((32 6) on_ivar "@argv"))
 (Token ((32 11) on_sp " "))
 (Token ((32 12) on_op "="))
 (Token ((32 13) on_sp " "))
 (Token ((32 14) on_ident "argv"))
 (Token ((32 18) on_nl "\n"))
 (Token ((33 0) on_ignored_nl "\n"))
 (Token ((34 0) on_sp "      "))
 (Token ((34 6) on_comment "# Default options values\n"))
 (Token ((35 0) on_sp "      "))
 (Token ((35 6) on_ivar "@options"))
 (Token ((35 14) on_sp " "))
 (Token ((35 15) on_op "="))
 (Token ((35 16) on_sp " "))
 (Token ((35 17) on_lbrace "{"))
 (Token ((35 18) on_ignored_nl "\n"))
 (Token ((36 0) on_sp "        "))
 (Token ((36 8) on_symbeg ":"))
 (Token ((36 9) on_ident "chdir"))
 (Token ((36 14) on_sp "                "))
 (Token ((36 30) on_op "=>"))
 (Token ((36 32) on_sp " "))
 (Token ((36 33) on_const "Dir"))
 (Token ((36 36) on_period "."))
 (Token ((36 37) on_ident "pwd"))
 (Token ((36 40) on_comma ","))
 (Token ((36 41) on_ignored_nl "\n"))
 (Token ((37 0) on_sp "        "))
 (Token ((37 8) on_symbeg ":"))
 (Token ((37 9) on_ident "environment"))
 (Token ((37 20) on_sp "          "))
 (Token ((37 30) on_op "=>"))
 (Token ((37 32) on_sp " "))
 (Token ((37 33) on_const "ENV"))
 (Token ((37 36) on_lbracket "["))
 (Token ((37 37) on_tstring_beg "'"))
 (Token ((37 38) on_tstring_content "RACK_ENV"))
 (Token ((37 46) on_tstring_end "'"))
 (Token ((37 47) on_rbracket "]"))
 (Token ((37 48) on_sp " "))
 (Token ((37 49) on_op "||"))
 (Token ((37 51) on_sp " "))
 (Token ((37 52) on_tstring_beg "'"))
 (Token ((37 53) on_tstring_content "development"))
 (Token ((37 64) on_tstring_end "'"))
 (Token ((37 65) on_comma ","))
 (Token ((37 66) on_ignored_nl "\n"))
 (Token ((38 0) on_sp "        "))
 (Token ((38 8) on_symbeg ":"))
 (Token ((38 9) on_ident "address"))
 (Token ((38 16) on_sp "              "))
 (Token ((38 30) on_op "=>"))
 (Token ((38 32) on_sp " "))
 (Token ((38 33) on_tstring_beg "'"))
 (Token ((38 34) on_tstring_content "0.0.0.0"))
 (Token ((38 41) on_tstring_end "'"))
 (Token ((38 42) on_comma ","))
 (Token ((38 43) on_ignored_nl "\n"))
 (Token ((39 0) on_sp "        "))
 (Token ((39 8) on_symbeg ":"))
 (Token ((39 9) on_ident "port"))
 (Token ((39 13) on_sp "                 "))
 (Token ((39 30) on_op "=>"))
 (Token ((39 32) on_sp " "))
 (Token ((39 33) on_const "Server"))
 (Token ((39 39) on_op "::"))
 (Token ((39 41) on_const "DEFAULT_PORT"))
 (Token ((39 53) on_comma ","))
 (Token ((39 54) on_ignored_nl "\n"))
 (Token ((40 0) on_sp "        "))
 (Token ((40 8) on_symbeg ":"))
 (Token ((40 9) on_ident "timeout"))
 (Token ((40 16) on_sp "              "))
 (Token ((40 30) on_op "=>"))
 (Token ((40 32) on_sp " "))
 (Token ((40 33) on_const "Server"))
 (Token ((40 39) on_op "::"))
 (Token ((40 41) on_const "DEFAULT_TIMEOUT"))
 (Token ((40 56) on_comma ","))
 (Token ((40 57) on_ignored_nl "\n"))
 (Token ((41 0) on_sp "        "))
 (Token ((41 8) on_symbeg ":"))
 (Token ((41 9) on_ident "log"))
 (Token ((41 12) on_sp "                  "))
 (Token ((41 30) on_op "=>"))
 (Token ((41 32) on_sp " "))
 (Token ((41 33) on_const "File"))
 (Token ((41 37) on_period "."))
 (Token ((41 38) on_ident "join"))
 (Token ((41 42) on_lparen "("))
 (Token ((41 43) on_const "Dir"))
 (Token ((41 46) on_period "."))
 (Token ((41 47) on_ident "pwd"))
 (Token ((41 50) on_comma ","))
 (Token ((41 51) on_sp " "))
 (Token ((41 52) on_tstring_beg "'"))
 (Token ((41 53) on_tstring_content "log/thin.log"))
 (Token ((41 65) on_tstring_end "'"))
 (Token ((41 66) on_rparen ")"))
 (Token ((41 67) on_comma ","))
 (Token ((41 68) on_ignored_nl "\n"))
 (Token ((42 0) on_sp "        "))
 (Token ((42 8) on_symbeg ":"))
 (Token ((42 9) on_ident "pid"))
 (Token ((42 12) on_sp "                  "))
 (Token ((42 30) on_op "=>"))
 (Token ((42 32) on_sp " "))
 (Token ((42 33) on_tstring_beg "'"))
 (Token ((42 34) on_tstring_content "tmp/pids/thin.pid"))
 (Token ((42 51) on_tstring_end "'"))
 (Token ((42 52) on_comma ","))
 (Token ((42 53) on_ignored_nl "\n"))
 (Token ((43 0) on_sp "        "))
 (Token ((43 8) on_symbeg ":"))
 (Token ((43 9) on_ident "max_conns"))
 (Token ((43 18) on_sp "            "))
 (Token ((43 30) on_op "=>"))
 (Token ((43 32) on_sp " "))
 (Token ((43 33) on_const "Server"))
 (Token ((43 39) on_op "::"))
 (Token ((43 41) on_const "DEFAULT_MAXIMUM_CONNECTIONS"))
 (Token ((43 68) on_comma ","))
 (Token ((43 69) on_ignored_nl "\n"))
 (Token ((44 0) on_sp "        "))
 (Token ((44 8) on_symbeg ":"))
 (Token ((44 9) on_ident "max_persistent_conns"))
 (Token ((44 29) on_sp " "))
 (Token ((44 30) on_op "=>"))
 (Token ((44 32) on_sp " "))
 (Token ((44 33) on_const "Server"))
 (Token ((44 39) on_op "::"))
 (Token ((44 41) on_const "DEFAULT_MAXIMUM_PERSISTENT_CONNECTIONS"))
 (Token ((44 79) on_comma ","))
 (Token ((44 80) on_ignored_nl "\n"))
 (Token ((45 0) on_sp "        "))
 (Token ((45 8) on_symbeg ":"))
 (Token ((45 9) on_ident "require"))
 (Token ((45 16) on_sp "              "))
 (Token ((45 30) on_op "=>"))
 (Token ((45 32) on_sp " "))
 (Token ((45 33) on_lbracket "["))
 (Token ((45 34) on_rbracket "]"))
 (Token ((45 35) on_comma ","))
 (Token ((45 36) on_ignored_nl "\n"))
 (Token ((46 0) on_sp "        "))
 (Token ((46 8) on_symbeg ":"))
 (Token ((46 9) on_ident "wait"))
 (Token ((46 13) on_sp "                 "))
 (Token ((46 30) on_op "=>"))
 (Token ((46 32) on_sp " "))
 (Token ((46 33) on_const "Controllers"))
 (Token ((46 44) on_op "::"))
 (Token ((46 46) on_const "Cluster"))
 (Token ((46 53) on_op "::"))
 (Token ((46 55) on_const "DEFAULT_WAIT_TIME"))
 (Token ((46 72) on_comma ","))
 (Token ((46 73) on_ignored_nl "\n"))
 (Token ((47 0) on_sp "        "))
 (Token ((47 8) on_symbeg ":"))
 (Token ((47 9) on_ident "threadpool_size"))
 (Token ((47 24) on_sp "      "))
 (Token ((47 30) on_op "=>"))
 (Token ((47 32) on_sp " "))
 (Token ((47 33) on_int "20"))
 (Token ((47 35) on_nl "\n"))
 (Token ((48 0) on_sp "      "))
 (Token ((48 6) on_rbrace "}"))
 (Token ((48 7) on_nl "\n"))
 (Token ((49 0) on_ignored_nl "\n"))
 (Token ((50 0) on_sp "      "))
 (Token ((50 6) on_ident "parse!"))
 (Token ((50 12) on_nl "\n"))
 (Token ((51 0) on_sp "    "))
 (Token ((51 4) on_kw "end"))
 (Token ((51 7) on_nl "\n"))
 (Token ((52 0) on_ignored_nl "\n"))
 (Token ((53 0) on_sp "    "))
 (Token ((53 4) on_kw "def"))
 (Token ((53 7) on_sp " "))
 (Token ((53 8) on_ident "parser"))
 (Token ((53 14) on_nl "\n"))
 (Token ((54 0) on_sp "      "))
 (Token
  ((54 6)
   on_comment
   "# NOTE: If you add an option here make sure the key in the +options+ hash is the\n"))
 (Token ((55 0) on_sp "      "))
 (Token ((55 6) on_comment "# same as the name of the command line option.\n"))
 (Token ((56 0) on_sp "      "))
 (Token
  ((56 6)
   on_comment
   "# +option+ keys are used to build the command line to launch other processes,\n"))
 (Token ((57 0) on_sp "      "))
 (Token ((57 6) on_comment "# see <tt>lib/thin/command.rb</tt>.\n"))
 (Token ((58 0) on_sp "      "))
 (Token ((58 6) on_ivar "@parser"))
 (Token ((58 13) on_sp " "))
 (Token ((58 14) on_op "||="))
 (Token ((58 17) on_sp " "))
 (Token ((58 18) on_const "OptionParser"))
 (Token ((58 30) on_period "."))
 (Token ((58 31) on_ident "new"))
 (Token ((58 34) on_sp " "))
 (Token ((58 35) on_kw "do"))
 (Token ((58 37) on_sp " "))
 (Token ((58 38) on_op "|"))
 (Token ((58 39) on_ident "opts"))
 (Token ((58 43) on_op "|"))
 (Token ((58 44) on_ignored_nl "\n"))
 (Token ((59 0) on_sp "        "))
 (Token ((59 8) on_ident "opts"))
 (Token ((59 12) on_period "."))
 (Token ((59 13) on_ident "banner"))
 (Token ((59 19) on_sp " "))
 (Token ((59 20) on_op "="))
 (Token ((59 21) on_sp " "))
 (Token ((59 22) on_tstring_beg "\""))
 (Token ((59 23) on_tstring_content "Usage: thin [options] "))
 (Token ((59 45) on_embexpr_beg "\\#{"))
 (Token ((59 47) on_kw "self"))
 (Token ((59 51) on_period "."))
 (Token ((59 52) on_ident "class"))
 (Token ((59 57) on_period "."))
 (Token ((59 58) on_ident "commands"))
 (Token ((59 66) on_period "."))
 (Token ((59 67) on_ident "join"))
 (Token ((59 71) on_lparen "("))
 (Token ((59 72) on_tstring_beg "'"))
 (Token ((59 73) on_tstring_content "|"))
 (Token ((59 74) on_tstring_end "'"))
 (Token ((59 75) on_rparen ")"))
 (Token ((59 76) on_embexpr_end "}"))
 (Token ((59 77) on_tstring_end "\""))
 (Token ((59 78) on_nl "\n"))
 (Token ((60 0) on_ignored_nl "\n"))
 (Token ((61 0) on_sp "        "))
 (Token ((61 8) on_ident "opts"))
 (Token ((61 12) on_period "."))
 (Token ((61 13) on_ident "separator"))
 (Token ((61 22) on_sp " "))
 (Token ((61 23) on_tstring_beg "\""))
 (Token ((61 24) on_tstring_end "\""))
 (Token ((61 25) on_nl "\n"))
 (Token ((62 0) on_sp "        "))
 (Token ((62 8) on_ident "opts"))
 (Token ((62 12) on_period "."))
 (Token ((62 13) on_ident "separator"))
 (Token ((62 22) on_sp " "))
 (Token ((62 23) on_tstring_beg "\""))
 (Token ((62 24) on_tstring_content "Server options:"))
 (Token ((62 39) on_tstring_end "\""))
 (Token ((62 40) on_nl "\n"))
 (Token ((63 0) on_ignored_nl "\n"))
 (Token ((64 0) on_sp "        "))
 (Token ((64 8) on_ident "opts"))
 (Token ((64 12) on_period "."))
 (Token ((64 13) on_ident "on"))
 (Token ((64 15) on_lparen "("))
 (Token ((64 16) on_tstring_beg "\""))
 (Token ((64 17) on_tstring_content "-a"))
 (Token ((64 19) on_tstring_end "\""))
 (Token ((64 20) on_comma ","))
 (Token ((64 21) on_sp " "))
 (Token ((64 22) on_tstring_beg "\""))
 (Token ((64 23) on_tstring_content "--address HOST"))
 (Token ((64 37) on_tstring_end "\""))
 (Token ((64 38) on_comma ","))
 (Token ((64 39) on_sp " "))
 (Token ((64 40) on_tstring_beg "\""))
 (Token ((64 41) on_tstring_content "bind to HOST address "))
 (Token ((64 62) on_tstring_end "\""))
 (Token ((64 63) on_sp " "))
 (Token ((64 64) on_op "+"))
 (Token ((64 65) on_ignored_nl "\n"))
 (Token ((65 0) on_sp "                                        "))
 (Token ((65 40) on_tstring_beg "\""))
 (Token ((65 41) on_tstring_content "(default: "))
 (Token ((65 51) on_embexpr_beg "\\#{"))
 (Token ((65 53) on_ivar "@options"))
 (Token ((65 61) on_lbracket "["))
 (Token ((65 62) on_symbeg ":"))
 (Token ((65 63) on_ident "address"))
 (Token ((65 70) on_rbracket "]"))
 (Token ((65 71) on_embexpr_end "}"))
 (Token ((65 72) on_tstring_content ")"))
 (Token ((65 73) on_tstring_end "\""))
 (Token ((65 74) on_rparen ")"))
 (Token ((65 75) on_sp "             "))
 (Token ((65 88) on_lbrace "{"))
 (Token ((65 89) on_sp " "))
 (Token ((65 90) on_op "|"))
 (Token ((65 91) on_ident "host"))
 (Token ((65 95) on_op "|"))
 (Token ((65 96) on_sp " "))
 (Token ((65 97) on_ivar "@options"))
 (Token ((65 105) on_lbracket "["))
 (Token ((65 106) on_symbeg ":"))
 (Token ((65 107) on_ident "address"))
 (Token ((65 114) on_rbracket "]"))
 (Token ((65 115) on_sp " "))
 (Token ((65 116) on_op "="))
 (Token ((65 117) on_sp " "))
 (Token ((65 118) on_ident "host"))
 (Token ((65 122) on_sp " "))
 (Token ((65 123) on_rbrace "}"))
 (Token ((65 124) on_nl "\n"))
 (Token ((66 0) on_sp "        "))
 (Token ((66 8) on_ident "opts"))
 (Token ((66 12) on_period "."))
 (Token ((66 13) on_ident "on"))
 (Token ((66 15) on_lparen "("))
 (Token ((66 16) on_tstring_beg "\""))
 (Token ((66 17) on_tstring_content "-p"))
 (Token ((66 19) on_tstring_end "\""))
 (Token ((66 20) on_comma ","))
 (Token ((66 21) on_sp " "))
 (Token ((66 22) on_tstring_beg "\""))
 (Token ((66 23) on_tstring_content "--port PORT"))
 (Token ((66 34) on_tstring_end "\""))
 (Token ((66 35) on_comma ","))
 (Token ((66 36) on_sp " "))
 (Token ((66 37) on_tstring_beg "\""))
 (Token ((66 38) on_tstring_content "use PORT (default: "))
 (Token ((66 57) on_embexpr_beg "\\#{"))
 (Token ((66 59) on_ivar "@options"))
 (Token ((66 67) on_lbracket "["))
 (Token ((66 68) on_symbeg ":"))
 (Token ((66 69) on_ident "port"))
 (Token ((66 73) on_rbracket "]"))
 (Token ((66 74) on_embexpr_end "}"))
 (Token ((66 75) on_tstring_content ")"))
 (Token ((66 76) on_tstring_end "\""))
 (Token ((66 77) on_rparen ")"))
 (Token ((66 78) on_sp "          "))
 (Token ((66 88) on_lbrace "{"))
 (Token ((66 89) on_sp " "))
 (Token ((66 90) on_op "|"))
 (Token ((66 91) on_ident "port"))
 (Token ((66 95) on_op "|"))
 (Token ((66 96) on_sp " "))
 (Token ((66 97) on_ivar "@options"))
 (Token ((66 105) on_lbracket "["))
 (Token ((66 106) on_symbeg ":"))
 (Token ((66 107) on_ident "port"))
 (Token ((66 111) on_rbracket "]"))
 (Token ((66 112) on_sp " "))
 (Token ((66 113) on_op "="))
 (Token ((66 114) on_sp " "))
 (Token ((66 115) on_ident "port"))
 (Token ((66 119) on_period "."))
 (Token ((66 120) on_ident "to_i"))
 (Token ((66 124) on_sp " "))
 (Token ((66 125) on_rbrace "}"))
 (Token ((66 126) on_nl "\n"))
 (Token ((67 0) on_sp "        "))
 (Token ((67 8) on_ident "opts"))
 (Token ((67 12) on_period "."))
 (Token ((67 13) on_ident "on"))
 (Token ((67 15) on_lparen "("))
 (Token ((67 16) on_tstring_beg "\""))
 (Token ((67 17) on_tstring_content "-S"))
 (Token ((67 19) on_tstring_end "\""))
 (Token ((67 20) on_comma ","))
 (Token ((67 21) on_sp " "))
 (Token ((67 22) on_tstring_beg "\""))
 (Token ((67 23) on_tstring_content "--socket FILE"))
 (Token ((67 36) on_tstring_end "\""))
 (Token ((67 37) on_comma ","))
 (Token ((67 38) on_sp " "))
 (Token ((67 39) on_tstring_beg "\""))
 (Token ((67 40) on_tstring_content "bind to unix domain socket"))
 (Token ((67 66) on_tstring_end "\""))
 (Token ((67 67) on_rparen ")"))
 (Token ((67 68) on_sp "                    "))
 (Token ((67 88) on_lbrace "{"))
 (Token ((67 89) on_sp " "))
 (Token ((67 90) on_op "|"))
 (Token ((67 91) on_ident "file"))
 (Token ((67 95) on_op "|"))
 (Token ((67 96) on_sp " "))
 (Token ((67 97) on_ivar "@options"))
 (Token ((67 105) on_lbracket "["))
 (Token ((67 106) on_symbeg ":"))
 (Token ((67 107) on_ident "socket"))
 (Token ((67 113) on_rbracket "]"))
 (Token ((67 114) on_sp " "))
 (Token ((67 115) on_op "="))
 (Token ((67 116) on_sp " "))
 (Token ((67 117) on_ident "file"))
 (Token ((67 121) on_sp " "))
 (Token ((67 122) on_rbrace "}"))
 (Token ((67 123) on_nl "\n"))
 (Token ((68 0) on_sp "        "))
 (Token ((68 8) on_ident "opts"))
 (Token ((68 12) on_period "."))
 (Token ((68 13) on_ident "on"))
 (Token ((68 15) on_lparen "("))
 (Token ((68 16) on_tstring_beg "\""))
 (Token ((68 17) on_tstring_content "-y"))
 (Token ((68 19) on_tstring_end "\""))
 (Token ((68 20) on_comma ","))
 (Token ((68 21) on_sp " "))
 (Token ((68 22) on_tstring_beg "\""))
 (Token ((68 23) on_tstring_content "--swiftiply [KEY]"))
 (Token ((68 40) on_tstring_end "\""))
 (Token ((68 41) on_comma ","))
 (Token ((68 42) on_sp " "))
 (Token ((68 43) on_tstring_beg "\""))
 (Token ((68 44) on_tstring_content "Run using swiftiply"))
 (Token ((68 63) on_tstring_end "\""))
 (Token ((68 64) on_rparen ")"))
 (Token ((68 65) on_sp "                       "))
 (Token ((68 88) on_lbrace "{"))
 (Token ((68 89) on_sp " "))
 (Token ((68 90) on_op "|"))
 (Token ((68 91) on_ident "key"))
 (Token ((68 94) on_op "|"))
 (Token ((68 95) on_sp " "))
 (Token ((68 96) on_ivar "@options"))
 (Token ((68 104) on_lbracket "["))
 (Token ((68 105) on_symbeg ":"))
 (Token ((68 106) on_ident "swiftiply"))
 (Token ((68 115) on_rbracket "]"))
 (Token ((68 116) on_sp " "))
 (Token ((68 117) on_op "="))
 (Token ((68 118) on_sp " "))
 (Token ((68 119) on_ident "key"))
 (Token ((68 122) on_sp " "))
 (Token ((68 123) on_rbrace "}"))
 (Token ((68 124) on_nl "\n"))
 (Token ((69 0) on_sp "        "))
 (Token ((69 8) on_ident "opts"))
 (Token ((69 12) on_period "."))
 (Token ((69 13) on_ident "on"))
 (Token ((69 15) on_lparen "("))
 (Token ((69 16) on_tstring_beg "\""))
 (Token ((69 17) on_tstring_content "-A"))
 (Token ((69 19) on_tstring_end "\""))
 (Token ((69 20) on_comma ","))
 (Token ((69 21) on_sp " "))
 (Token ((69 22) on_tstring_beg "\""))
 (Token ((69 23) on_tstring_content "--adapter NAME"))
 (Token ((69 37) on_tstring_end "\""))
 (Token ((69 38) on_comma ","))
 (Token ((69 39) on_sp " "))
 (Token ((69 40) on_tstring_beg "\""))
 (Token
  ((69 41) on_tstring_content "Rack adapter to use (default: autodetect)"))
 (Token ((69 82) on_tstring_end "\""))
 (Token ((69 83) on_comma ","))
 (Token ((69 84) on_ignored_nl "\n"))
 (Token ((70 0) on_sp "                                        "))
 (Token ((70 40) on_tstring_beg "\""))
 (Token ((70 41) on_tstring_content "("))
 (Token ((70 42) on_embexpr_beg "\\#{"))
 (Token ((70 44) on_const "Rack"))
 (Token ((70 48) on_op "::"))
 (Token ((70 50) on_const "ADAPTERS"))
 (Token ((70 58) on_period "."))
 (Token ((70 59) on_ident "map"))
 (Token ((70 62) on_lbrace "{"))
 (Token ((70 63) on_op "|"))
 (Token ((70 64) on_lparen "("))
 (Token ((70 65) on_ident "a"))
 (Token ((70 66) on_comma ","))
 (Token ((70 67) on_ident "b"))
 (Token ((70 68) on_rparen ")"))
 (Token ((70 69) on_op "|"))
 (Token ((70 70) on_ident "a"))
 (Token ((70 71) on_rbrace "}"))
 (Token ((70 72) on_period "."))
 (Token ((70 73) on_ident "join"))
 (Token ((70 77) on_lparen "("))
 (Token ((70 78) on_tstring_beg "'"))
 (Token ((70 79) on_tstring_content ", "))
 (Token ((70 81) on_tstring_end "'"))
 (Token ((70 82) on_rparen ")"))
 (Token ((70 83) on_embexpr_end "}"))
 (Token ((70 84) on_tstring_content ")"))
 (Token ((70 85) on_tstring_end "\""))
 (Token ((70 86) on_rparen ")"))
 (Token ((70 87) on_sp " "))
 (Token ((70 88) on_lbrace "{"))
 (Token ((70 89) on_sp " "))
 (Token ((70 90) on_op "|"))
 (Token ((70 91) on_ident "name"))
 (Token ((70 95) on_op "|"))
 (Token ((70 96) on_sp " "))
 (Token ((70 97) on_ivar "@options"))
 (Token ((70 105) on_lbracket "["))
 (Token ((70 106) on_symbeg ":"))
 (Token ((70 107) on_ident "adapter"))
 (Token ((70 114) on_rbracket "]"))
 (Token ((70 115) on_sp " "))
 (Token ((70 116) on_op "="))
 (Token ((70 117) on_sp " "))
 (Token ((70 118) on_ident "name"))
 (Token ((70 122) on_sp " "))
 (Token ((70 123) on_rbrace "}"))
 (Token ((70 124) on_nl "\n"))
 (Token ((71 0) on_sp "        "))
 (Token ((71 8) on_ident "opts"))
 (Token ((71 12) on_period "."))
 (Token ((71 13) on_ident "on"))
 (Token ((71 15) on_lparen "("))
 (Token ((71 16) on_tstring_beg "\""))
 (Token ((71 17) on_tstring_content "-R"))
 (Token ((71 19) on_tstring_end "\""))
 (Token ((71 20) on_comma ","))
 (Token ((71 21) on_sp " "))
 (Token ((71 22) on_tstring_beg "\""))
 (Token ((71 23) on_tstring_content "--rackup FILE"))
 (Token ((71 36) on_tstring_end "\""))
 (Token ((71 37) on_comma ","))
 (Token ((71 38) on_sp " "))
 (Token ((71 39) on_tstring_beg "\""))
 (Token ((71 40) on_tstring_content "Load a Rack config file instead of "))
 (Token ((71 75) on_tstring_end "\""))
 (Token ((71 76) on_sp " "))
 (Token ((71 77) on_op "+"))
 (Token ((71 78) on_ignored_nl "\n"))
 (Token ((72 0) on_sp "                                       "))
 (Token ((72 39) on_tstring_beg "\""))
 (Token ((72 40) on_tstring_content "Rack adapter"))
 (Token ((72 52) on_tstring_end "\""))
 (Token ((72 53) on_rparen ")"))
 (Token ((72 54) on_sp "                                  "))
 (Token ((72 88) on_lbrace "{"))
 (Token ((72 89) on_sp " "))
 (Token ((72 90) on_op "|"))
 (Token ((72 91) on_ident "file"))
 (Token ((72 95) on_op "|"))
 (Token ((72 96) on_sp " "))
 (Token ((72 97) on_ivar "@options"))
 (Token ((72 105) on_lbracket "["))
 (Token ((72 106) on_symbeg ":"))
 (Token ((72 107) on_ident "rackup"))
 (Token ((72 113) on_rbracket "]"))
 (Token ((72 114) on_sp " "))
 (Token ((72 115) on_op "="))
 (Token ((72 116) on_sp " "))
 (Token ((72 117) on_ident "file"))
 (Token ((72 121) on_sp " "))
 (Token ((72 122) on_rbrace "}"))
 (Token ((72 123) on_nl "\n"))
 (Token ((73 0) on_sp "        "))
 (Token ((73 8) on_ident "opts"))
 (Token ((73 12) on_period "."))
 (Token ((73 13) on_ident "on"))
 (Token ((73 15) on_lparen "("))
 (Token ((73 16) on_tstring_beg "\""))
 (Token ((73 17) on_tstring_content "-c"))
 (Token ((73 19) on_tstring_end "\""))
 (Token ((73 20) on_comma ","))
 (Token ((73 21) on_sp " "))
 (Token ((73 22) on_tstring_beg "\""))
 (Token ((73 23) on_tstring_content "--chdir DIR"))
 (Token ((73 34) on_tstring_end "\""))
 (Token ((73 35) on_comma ","))
 (Token ((73 36) on_sp " "))
 (Token ((73 37) on_tstring_beg "\""))
 (Token ((73 38) on_tstring_content "Change to dir before starting"))
 (Token ((73 67) on_tstring_end "\""))
 (Token ((73 68) on_rparen ")"))
 (Token ((73 69) on_sp "                   "))
 (Token ((73 88) on_lbrace "{"))
 (Token ((73 89) on_sp " "))
 (Token ((73 90) on_op "|"))
 (Token ((73 91) on_ident "dir"))
 (Token ((73 94) on_op "|"))
 (Token ((73 95) on_sp " "))
 (Token ((73 96) on_ivar "@options"))
 (Token ((73 104) on_lbracket "["))
 (Token ((73 105) on_symbeg ":"))
 (Token ((73 106) on_ident "chdir"))
 (Token ((73 111) on_rbracket "]"))
 (Token ((73 112) on_sp " "))
 (Token ((73 113) on_op "="))
 (Token ((73 114) on_sp " "))
 (Token ((73 115) on_const "File"))
 (Token ((73 119) on_period "."))
 (Token ((73 120) on_ident "expand_path"))
 (Token ((73 131) on_lparen "("))
 (Token ((73 132) on_ident "dir"))
 (Token ((73 135) on_rparen ")"))
 (Token ((73 136) on_sp " "))
 (Token ((73 137) on_rbrace "}"))
 (Token ((73 138) on_nl "\n"))
 (Token ((74 0) on_sp "        "))
 (Token ((74 8) on_ident "opts"))
 (Token ((74 12) on_period "."))
 (Token ((74 13) on_ident "on"))
 (Token ((74 15) on_lparen "("))
 (Token ((74 16) on_sp "      "))
 (Token ((74 22) on_tstring_beg "\""))
 (Token ((74 23) on_tstring_content "--stats PATH"))
 (Token ((74 35) on_tstring_end "\""))
 (Token ((74 36) on_comma ","))
 (Token ((74 37) on_sp " "))
 (Token ((74 38) on_tstring_beg "\""))
 (Token ((74 39) on_tstring_content "Mount the Stats adapter under PATH"))
 (Token ((74 73) on_tstring_end "\""))
 (Token ((74 74) on_rparen ")"))
 (Token ((74 75) on_sp "             "))
 (Token ((74 88) on_lbrace "{"))
 (Token ((74 89) on_sp " "))
 (Token ((74 90) on_op "|"))
 (Token ((74 91) on_ident "path"))
 (Token ((74 95) on_op "|"))
 (Token ((74 96) on_sp " "))
 (Token ((74 97) on_ivar "@options"))
 (Token ((74 105) on_lbracket "["))
 (Token ((74 106) on_symbeg ":"))
 (Token ((74 107) on_ident "stats"))
 (Token ((74 112) on_rbracket "]"))
 (Token ((74 113) on_sp " "))
 (Token ((74 114) on_op "="))
 (Token ((74 115) on_sp " "))
 (Token ((74 116) on_ident "path"))
 (Token ((74 120) on_sp " "))
 (Token ((74 121) on_rbrace "}"))
 (Token ((74 122) on_nl "\n"))
 (Token ((75 0) on_ignored_nl "\n"))
 (Token ((76 0) on_sp "        "))
 (Token ((76 8) on_ident "opts"))
 (Token ((76 12) on_period "."))
 (Token ((76 13) on_ident "separator"))
 (Token ((76 22) on_sp " "))
 (Token ((76 23) on_tstring_beg "\""))
 (Token ((76 24) on_tstring_end "\""))
 (Token ((76 25) on_nl "\n"))
 (Token ((77 0) on_sp "        "))
 (Token ((77 8) on_ident "opts"))
 (Token ((77 12) on_period "."))
 (Token ((77 13) on_ident "separator"))
 (Token ((77 22) on_sp " "))
 (Token ((77 23) on_tstring_beg "\""))
 (Token ((77 24) on_tstring_content "SSL options:"))
 (Token ((77 36) on_tstring_end "\""))
 (Token ((77 37) on_nl "\n"))
 (Token ((78 0) on_ignored_nl "\n"))
 (Token ((79 0) on_sp "        "))
 (Token ((79 8) on_ident "opts"))
 (Token ((79 12) on_period "."))
 (Token ((79 13) on_ident "on"))
 (Token ((79 15) on_lparen "("))
 (Token ((79 16) on_sp "      "))
 (Token ((79 22) on_tstring_beg "\""))
 (Token ((79 23) on_tstring_content "--ssl"))
 (Token ((79 28) on_tstring_end "\""))
 (Token ((79 29) on_comma ","))
 (Token ((79 30) on_sp " "))
 (Token ((79 31) on_tstring_beg "\""))
 (Token ((79 32) on_tstring_content "Enables SSL"))
 (Token ((79 43) on_tstring_end "\""))
 (Token ((79 44) on_rparen ")"))
 (Token ((79 45) on_sp "                                           "))
 (Token ((79 88) on_lbrace "{"))
 (Token ((79 89) on_sp " "))
 (Token ((79 90) on_ivar "@options"))
 (Token ((79 98) on_lbracket "["))
 (Token ((79 99) on_symbeg ":"))
 (Token ((79 100) on_ident "ssl"))
 (Token ((79 103) on_rbracket "]"))
 (Token ((79 104) on_sp " "))
 (Token ((79 105) on_op "="))
 (Token ((79 106) on_sp " "))
 (Token ((79 107) on_kw "true"))
 (Token ((79 111) on_sp " "))
 (Token ((79 112) on_rbrace "}"))
 (Token ((79 113) on_nl "\n"))
 (Token ((80 0) on_sp "        "))
 (Token ((80 8) on_ident "opts"))
 (Token ((80 12) on_period "."))
 (Token ((80 13) on_ident "on"))
 (Token ((80 15) on_lparen "("))
 (Token ((80 16) on_sp "      "))
 (Token ((80 22) on_tstring_beg "\""))
 (Token ((80 23) on_tstring_content "--ssl-key-file PATH"))
 (Token ((80 42) on_tstring_end "\""))
 (Token ((80 43) on_comma ","))
 (Token ((80 44) on_sp " "))
 (Token ((80 45) on_tstring_beg "\""))
 (Token ((80 46) on_tstring_content "Path to private key"))
 (Token ((80 65) on_tstring_end "\""))
 (Token ((80 66) on_rparen ")"))
 (Token ((80 67) on_sp "                     "))
 (Token ((80 88) on_lbrace "{"))
 (Token ((80 89) on_sp " "))
 (Token ((80 90) on_op "|"))
 (Token ((80 91) on_ident "path"))
 (Token ((80 95) on_op "|"))
 (Token ((80 96) on_sp " "))
 (Token ((80 97) on_ivar "@options"))
 (Token ((80 105) on_lbracket "["))
 (Token ((80 106) on_symbeg ":"))
 (Token ((80 107) on_ident "ssl_key_file"))
 (Token ((80 119) on_rbracket "]"))
 (Token ((80 120) on_sp " "))
 (Token ((80 121) on_op "="))
 (Token ((80 122) on_sp " "))
 (Token ((80 123) on_ident "path"))
 (Token ((80 127) on_sp " "))
 (Token ((80 128) on_rbrace "}"))
 (Token ((80 129) on_nl "\n"))
 (Token ((81 0) on_sp "        "))
 (Token ((81 8) on_ident "opts"))
 (Token ((81 12) on_period "."))
 (Token ((81 13) on_ident "on"))
 (Token ((81 15) on_lparen "("))
 (Token ((81 16) on_sp "      "))
 (Token ((81 22) on_tstring_beg "\""))
 (Token ((81 23) on_tstring_content "--ssl-cert-file PATH"))
 (Token ((81 43) on_tstring_end "\""))
 (Token ((81 44) on_comma ","))
 (Token ((81 45) on_sp " "))
 (Token ((81 46) on_tstring_beg "\""))
 (Token ((81 47) on_tstring_content "Path to certificate"))
 (Token ((81 66) on_tstring_end "\""))
 (Token ((81 67) on_rparen ")"))
 (Token ((81 68) on_sp "                    "))
 (Token ((81 88) on_lbrace "{"))
 (Token ((81 89) on_sp " "))
 (Token ((81 90) on_op "|"))
 (Token ((81 91) on_ident "path"))
 (Token ((81 95) on_op "|"))
 (Token ((81 96) on_sp " "))
 (Token ((81 97) on_ivar "@options"))
 (Token ((81 105) on_lbracket "["))
 (Token ((81 106) on_symbeg ":"))
 (Token ((81 107) on_ident "ssl_cert_file"))
 (Token ((81 120) on_rbracket "]"))
 (Token ((81 121) on_sp " "))
 (Token ((81 122) on_op "="))
 (Token ((81 123) on_sp " "))
 (Token ((81 124) on_ident "path"))
 (Token ((81 128) on_sp " "))
 (Token ((81 129) on_rbrace "}"))
 (Token ((81 130) on_nl "\n"))
 (Token ((82 0) on_sp "        "))
 (Token ((82 8) on_ident "opts"))
 (Token ((82 12) on_period "."))
 (Token ((82 13) on_ident "on"))
 (Token ((82 15) on_lparen "("))
 (Token ((82 16) on_sp "      "))
 (Token ((82 22) on_tstring_beg "\""))
 (Token ((82 23) on_tstring_content "--ssl-disable-verify"))
 (Token ((82 43) on_tstring_end "\""))
 (Token ((82 44) on_comma ","))
 (Token ((82 45) on_sp " "))
 (Token ((82 46) on_tstring_beg "\""))
 (Token
  ((82 47) on_tstring_content "Disables (optional) client cert requests"))
 (Token ((82 87) on_tstring_end "\""))
 (Token ((82 88) on_rparen ")"))
 (Token ((82 89) on_sp " "))
 (Token ((82 90) on_lbrace "{"))
 (Token ((82 91) on_sp " "))
 (Token ((82 92) on_ivar "@options"))
 (Token ((82 100) on_lbracket "["))
 (Token ((82 101) on_symbeg ":"))
 (Token ((82 102) on_ident "ssl_disable_verify"))
 (Token ((82 120) on_rbracket "]"))
 (Token ((82 121) on_sp " "))
 (Token ((82 122) on_op "="))
 (Token ((82 123) on_sp " "))
 (Token ((82 124) on_kw "true"))
 (Token ((82 128) on_sp " "))
 (Token ((82 129) on_rbrace "}"))
 (Token ((82 130) on_nl "\n"))
 (Token ((83 0) on_ignored_nl "\n"))
 (Token ((84 0) on_sp "        "))
 (Token ((84 8) on_ident "opts"))
 (Token ((84 12) on_period "."))
 (Token ((84 13) on_ident "separator"))
 (Token ((84 22) on_sp " "))
 (Token ((84 23) on_tstring_beg "\""))
 (Token ((84 24) on_tstring_end "\""))
 (Token ((84 25) on_nl "\n"))
 (Token ((85 0) on_sp "        "))
 (Token ((85 8) on_ident "opts"))
 (Token ((85 12) on_period "."))
 (Token ((85 13) on_ident "separator"))
 (Token ((85 22) on_sp " "))
 (Token ((85 23) on_tstring_beg "\""))
 (Token ((85 24) on_tstring_content "Adapter options:"))
 (Token ((85 40) on_tstring_end "\""))
 (Token ((85 41) on_nl "\n"))
 (Token ((86 0) on_sp "        "))
 (Token ((86 8) on_ident "opts"))
 (Token ((86 12) on_period "."))
 (Token ((86 13) on_ident "on"))
 (Token ((86 15) on_lparen "("))
 (Token ((86 16) on_tstring_beg "\""))
 (Token ((86 17) on_tstring_content "-e"))
 (Token ((86 19) on_tstring_end "\""))
 (Token ((86 20) on_comma ","))
 (Token ((86 21) on_sp " "))
 (Token ((86 22) on_tstring_beg "\""))
 (Token ((86 23) on_tstring_content "--environment ENV"))
 (Token ((86 40) on_tstring_end "\""))
 (Token ((86 41) on_comma ","))
 (Token ((86 42) on_sp " "))
 (Token ((86 43) on_tstring_beg "\""))
 (Token ((86 44) on_tstring_content "Framework environment "))
 (Token ((86 66) on_tstring_end "\""))
 (Token ((86 67) on_sp " "))
 (Token ((86 68) on_op "+"))
 (Token ((86 69) on_ignored_nl "\n"))
 (Token ((87 0) on_sp "                                           "))
 (Token ((87 43) on_tstring_beg "\""))
 (Token ((87 44) on_tstring_content "(default: "))
 (Token ((87 54) on_embexpr_beg "\\#{"))
 (Token ((87 56) on_ivar "@options"))
 (Token ((87 64) on_lbracket "["))
 (Token ((87 65) on_symbeg ":"))
 (Token ((87 66) on_ident "environment"))
 (Token ((87 77) on_rbracket "]"))
 (Token ((87 78) on_embexpr_end "}"))
 (Token ((87 79) on_tstring_content ")"))
 (Token ((87 80) on_tstring_end "\""))
 (Token ((87 81) on_rparen ")"))
 (Token ((87 82) on_sp "      "))
 (Token ((87 88) on_lbrace "{"))
 (Token ((87 89) on_sp " "))
 (Token ((87 90) on_op "|"))
 (Token ((87 91) on_ident "env"))
 (Token ((87 94) on_op "|"))
 (Token ((87 95) on_sp " "))
 (Token ((87 96) on_ivar "@options"))
 (Token ((87 104) on_lbracket "["))
 (Token ((87 105) on_symbeg ":"))
 (Token ((87 106) on_ident "environment"))
 (Token ((87 117) on_rbracket "]"))
 (Token ((87 118) on_sp " "))
 (Token ((87 119) on_op "="))
 (Token ((87 120) on_sp " "))
 (Token ((87 121) on_ident "env"))
 (Token ((87 124) on_sp " "))
 (Token ((87 125) on_rbrace "}"))
 (Token ((87 126) on_nl "\n"))
 (Token ((88 0) on_sp "        "))
 (Token ((88 8) on_ident "opts"))
 (Token ((88 12) on_period "."))
 (Token ((88 13) on_ident "on"))
 (Token ((88 15) on_lparen "("))
 (Token ((88 16) on_sp "      "))
 (Token ((88 22) on_tstring_beg "\""))
 (Token ((88 23) on_tstring_content "--prefix PATH"))
 (Token ((88 36) on_tstring_end "\""))
 (Token ((88 37) on_comma ","))
 (Token ((88 38) on_sp " "))
 (Token ((88 39) on_tstring_beg "\""))
 (Token ((88 40) on_tstring_content "Mount the app under PATH (start with /)"))
 (Token ((88 79) on_tstring_end "\""))
 (Token ((88 80) on_rparen ")"))
 (Token ((88 81) on_sp "       "))
 (Token ((88 88) on_lbrace "{"))
 (Token ((88 89) on_sp " "))
 (Token ((88 90) on_op "|"))
 (Token ((88 91) on_ident "path"))
 (Token ((88 95) on_op "|"))
 (Token ((88 96) on_sp " "))
 (Token ((88 97) on_ivar "@options"))
 (Token ((88 105) on_lbracket "["))
 (Token ((88 106) on_symbeg ":"))
 (Token ((88 107) on_ident "prefix"))
 (Token ((88 113) on_rbracket "]"))
 (Token ((88 114) on_sp " "))
 (Token ((88 115) on_op "="))
 (Token ((88 116) on_sp " "))
 (Token ((88 117) on_ident "path"))
 (Token ((88 121) on_sp " "))
 (Token ((88 122) on_rbrace "}"))
 (Token ((88 123) on_nl "\n"))
 (Token ((89 0) on_ignored_nl "\n"))
 (Token ((90 0) on_sp "        "))
 (Token ((90 8) on_kw "unless"))
 (Token ((90 14) on_sp " "))
 (Token ((90 15) on_const "Thin"))
 (Token ((90 19) on_period "."))
 (Token ((90 20) on_ident "win?"))
 (Token ((90 24) on_sp " "))
 (Token ((90 25) on_comment "# Daemonizing not supported on Windows\n"))
 (Token ((91 0) on_sp "          "))
 (Token ((91 10) on_ident "opts"))
 (Token ((91 14) on_period "."))
 (Token ((91 15) on_ident "separator"))
 (Token ((91 24) on_sp " "))
 (Token ((91 25) on_tstring_beg "\""))
 (Token ((91 26) on_tstring_end "\""))
 (Token ((91 27) on_nl "\n"))
 (Token ((92 0) on_sp "          "))
 (Token ((92 10) on_ident "opts"))
 (Token ((92 14) on_period "."))
 (Token ((92 15) on_ident "separator"))
 (Token ((92 24) on_sp " "))
 (Token ((92 25) on_tstring_beg "\""))
 (Token ((92 26) on_tstring_content "Daemon options:"))
 (Token ((92 41) on_tstring_end "\""))
 (Token ((92 42) on_nl "\n"))
 (Token ((93 0) on_ignored_nl "\n"))
 (Token ((94 0) on_sp "          "))
 (Token ((94 10) on_ident "opts"))
 (Token ((94 14) on_period "."))
 (Token ((94 15) on_ident "on"))
 (Token ((94 17) on_lparen "("))
 (Token ((94 18) on_tstring_beg "\""))
 (Token ((94 19) on_tstring_content "-d"))
 (Token ((94 21) on_tstring_end "\""))
 (Token ((94 22) on_comma ","))
 (Token ((94 23) on_sp " "))
 (Token ((94 24) on_tstring_beg "\""))
 (Token ((94 25) on_tstring_content "--daemonize"))
 (Token ((94 36) on_tstring_end "\""))
 (Token ((94 37) on_comma ","))
 (Token ((94 38) on_sp " "))
 (Token ((94 39) on_tstring_beg "\""))
 (Token ((94 40) on_tstring_content "Run daemonized in the background"))
 (Token ((94 72) on_tstring_end "\""))
 (Token ((94 73) on_rparen ")"))
 (Token ((94 74) on_sp "              "))
 (Token ((94 88) on_lbrace "{"))
 (Token ((94 89) on_sp " "))
 (Token ((94 90) on_ivar "@options"))
 (Token ((94 98) on_lbracket "["))
 (Token ((94 99) on_symbeg ":"))
 (Token ((94 100) on_ident "daemonize"))
 (Token ((94 109) on_rbracket "]"))
 (Token ((94 110) on_sp " "))
 (Token ((94 111) on_op "="))
 (Token ((94 112) on_sp " "))
 (Token ((94 113) on_kw "true"))
 (Token ((94 117) on_sp " "))
 (Token ((94 118) on_rbrace "}"))
 (Token ((94 119) on_nl "\n"))
 (Token ((95 0) on_sp "          "))
 (Token ((95 10) on_ident "opts"))
 (Token ((95 14) on_period "."))
 (Token ((95 15) on_ident "on"))
 (Token ((95 17) on_lparen "("))
 (Token ((95 18) on_tstring_beg "\""))
 (Token ((95 19) on_tstring_content "-l"))
 (Token ((95 21) on_tstring_end "\""))
 (Token ((95 22) on_comma ","))
 (Token ((95 23) on_sp " "))
 (Token ((95 24) on_tstring_beg "\""))
 (Token ((95 25) on_tstring_content "--log FILE"))
 (Token ((95 35) on_tstring_end "\""))
 (Token ((95 36) on_comma ","))
 (Token ((95 37) on_sp " "))
 (Token ((95 38) on_tstring_beg "\""))
 (Token ((95 39) on_tstring_content "File to redirect output "))
 (Token ((95 63) on_tstring_end "\""))
 (Token ((95 64) on_sp " "))
 (Token ((95 65) on_op "+"))
 (Token ((95 66) on_ignored_nl "\n"))
 (Token ((96 0) on_sp "                                      "))
 (Token ((96 38) on_tstring_beg "\""))
 (Token ((96 39) on_tstring_content "(default: "))
 (Token ((96 49) on_embexpr_beg "\\#{"))
 (Token ((96 51) on_ivar "@options"))
 (Token ((96 59) on_lbracket "["))
 (Token ((96 60) on_symbeg ":"))
 (Token ((96 61) on_ident "log"))
 (Token ((96 64) on_rbracket "]"))
 (Token ((96 65) on_embexpr_end "}"))
 (Token ((96 66) on_tstring_content ")"))
 (Token ((96 67) on_tstring_end "\""))
 (Token ((96 68) on_rparen ")"))
 (Token ((96 69) on_sp "                   "))
 (Token ((96 88) on_lbrace "{"))
 (Token ((96 89) on_sp " "))
 (Token ((96 90) on_op "|"))
 (Token ((96 91) on_ident "file"))
 (Token ((96 95) on_op "|"))
 (Token ((96 96) on_sp " "))
 (Token ((96 97) on_ivar "@options"))
 (Token ((96 105) on_lbracket "["))
 (Token ((96 106) on_symbeg ":"))
 (Token ((96 107) on_ident "log"))
 (Token ((96 110) on_rbracket "]"))
 (Token ((96 111) on_sp " "))
 (Token ((96 112) on_op "="))
 (Token ((96 113) on_sp " "))
 (Token ((96 114) on_ident "file"))
 (Token ((96 118) on_sp " "))
 (Token ((96 119) on_rbrace "}"))
 (Token ((96 120) on_nl "\n"))
 (Token ((97 0) on_sp "          "))
 (Token ((97 10) on_ident "opts"))
 (Token ((97 14) on_period "."))
 (Token ((97 15) on_ident "on"))
 (Token ((97 17) on_lparen "("))
 (Token ((97 18) on_tstring_beg "\""))
 (Token ((97 19) on_tstring_content "-P"))
 (Token ((97 21) on_tstring_end "\""))
 (Token ((97 22) on_comma ","))
 (Token ((97 23) on_sp " "))
 (Token ((97 24) on_tstring_beg "\""))
 (Token ((97 25) on_tstring_content "--pid FILE"))
 (Token ((97 35) on_tstring_end "\""))
 (Token ((97 36) on_comma ","))
 (Token ((97 37) on_sp " "))
 (Token ((97 38) on_tstring_beg "\""))
 (Token ((97 39) on_tstring_content "File to store PID "))
 (Token ((97 57) on_tstring_end "\""))
 (Token ((97 58) on_sp " "))
 (Token ((97 59) on_op "+"))
 (Token ((97 60) on_ignored_nl "\n"))
 (Token ((98 0) on_sp "                                      "))
 (Token ((98 38) on_tstring_beg "\""))
 (Token ((98 39) on_tstring_content "(default: "))
 (Token ((98 49) on_embexpr_beg "\\#{"))
 (Token ((98 51) on_ivar "@options"))
 (Token ((98 59) on_lbracket "["))
 (Token ((98 60) on_symbeg ":"))
 (Token ((98 61) on_ident "pid"))
 (Token ((98 64) on_rbracket "]"))
 (Token ((98 65) on_embexpr_end "}"))
 (Token ((98 66) on_tstring_content ")"))
 (Token ((98 67) on_tstring_end "\""))
 (Token ((98 68) on_rparen ")"))
 (Token ((98 69) on_sp "                   "))
 (Token ((98 88) on_lbrace "{"))
 (Token ((98 89) on_sp " "))
 (Token ((98 90) on_op "|"))
 (Token ((98 91) on_ident "file"))
 (Token ((98 95) on_op "|"))
 (Token ((98 96) on_sp " "))
 (Token ((98 97) on_ivar "@options"))
 (Token ((98 105) on_lbracket "["))
 (Token ((98 106) on_symbeg ":"))
 (Token ((98 107) on_ident "pid"))
 (Token ((98 110) on_rbracket "]"))
 (Token ((98 111) on_sp " "))
 (Token ((98 112) on_op "="))
 (Token ((98 113) on_sp " "))
 (Token ((98 114) on_ident "file"))
 (Token ((98 118) on_sp " "))
 (Token ((98 119) on_rbrace "}"))
 (Token ((98 120) on_nl "\n"))
 (Token ((99 0) on_sp "          "))
 (Token ((99 10) on_ident "opts"))
 (Token ((99 14) on_period "."))
 (Token ((99 15) on_ident "on"))
 (Token ((99 17) on_lparen "("))
 (Token ((99 18) on_tstring_beg "\""))
 (Token ((99 19) on_tstring_content "-u"))
 (Token ((99 21) on_tstring_end "\""))
 (Token ((99 22) on_comma ","))
 (Token ((99 23) on_sp " "))
 (Token ((99 24) on_tstring_beg "\""))
 (Token ((99 25) on_tstring_content "--user NAME"))
 (Token ((99 36) on_tstring_end "\""))
 (Token ((99 37) on_comma ","))
 (Token ((99 38) on_sp " "))
 (Token ((99 39) on_tstring_beg "\""))
 (Token ((99 40) on_tstring_content "User to run daemon as (use with -g)"))
 (Token ((99 75) on_tstring_end "\""))
 (Token ((99 76) on_rparen ")"))
 (Token ((99 77) on_sp "           "))
 (Token ((99 88) on_lbrace "{"))
 (Token ((99 89) on_sp " "))
 (Token ((99 90) on_op "|"))
 (Token ((99 91) on_ident "user"))
 (Token ((99 95) on_op "|"))
 (Token ((99 96) on_sp " "))
 (Token ((99 97) on_ivar "@options"))
 (Token ((99 105) on_lbracket "["))
 (Token ((99 106) on_symbeg ":"))
 (Token ((99 107) on_ident "user"))
 (Token ((99 111) on_rbracket "]"))
 (Token ((99 112) on_sp " "))
 (Token ((99 113) on_op "="))
 (Token ((99 114) on_sp " "))
 (Token ((99 115) on_ident "user"))
 (Token ((99 119) on_sp " "))
 (Token ((99 120) on_rbrace "}"))
 (Token ((99 121) on_nl "\n"))
 (Token ((100 0) on_sp "          "))
 (Token ((100 10) on_ident "opts"))
 (Token ((100 14) on_period "."))
 (Token ((100 15) on_ident "on"))
 (Token ((100 17) on_lparen "("))
 (Token ((100 18) on_tstring_beg "\""))
 (Token ((100 19) on_tstring_content "-g"))
 (Token ((100 21) on_tstring_end "\""))
 (Token ((100 22) on_comma ","))
 (Token ((100 23) on_sp " "))
 (Token ((100 24) on_tstring_beg "\""))
 (Token ((100 25) on_tstring_content "--group NAME"))
 (Token ((100 37) on_tstring_end "\""))
 (Token ((100 38) on_comma ","))
 (Token ((100 39) on_sp " "))
 (Token ((100 40) on_tstring_beg "\""))
 (Token ((100 41) on_tstring_content "Group to run daemon as (use with -u)"))
 (Token ((100 77) on_tstring_end "\""))
 (Token ((100 78) on_rparen ")"))
 (Token ((100 79) on_sp "         "))
 (Token ((100 88) on_lbrace "{"))
 (Token ((100 89) on_sp " "))
 (Token ((100 90) on_op "|"))
 (Token ((100 91) on_ident "group"))
 (Token ((100 96) on_op "|"))
 (Token ((100 97) on_sp " "))
 (Token ((100 98) on_ivar "@options"))
 (Token ((100 106) on_lbracket "["))
 (Token ((100 107) on_symbeg ":"))
 (Token ((100 108) on_ident "group"))
 (Token ((100 113) on_rbracket "]"))
 (Token ((100 114) on_sp " "))
 (Token ((100 115) on_op "="))
 (Token ((100 116) on_sp " "))
 (Token ((100 117) on_ident "group"))
 (Token ((100 122) on_sp " "))
 (Token ((100 123) on_rbrace "}"))
 (Token ((100 124) on_nl "\n"))
 (Token ((101 0) on_sp "          "))
 (Token ((101 10) on_ident "opts"))
 (Token ((101 14) on_period "."))
 (Token ((101 15) on_ident "on"))
 (Token ((101 17) on_lparen "("))
 (Token ((101 18) on_sp "      "))
 (Token ((101 24) on_tstring_beg "\""))
 (Token ((101 25) on_tstring_content "--tag NAME"))
 (Token ((101 35) on_tstring_end "\""))
 (Token ((101 36) on_comma ","))
 (Token ((101 37) on_sp " "))
 (Token ((101 38) on_tstring_beg "\""))
 (Token
  ((101 39)
   on_tstring_content
   "Additional text to display in process listing"))
 (Token ((101 84) on_tstring_end "\""))
 (Token ((101 85) on_rparen ")"))
 (Token ((101 86) on_sp "  "))
 (Token ((101 88) on_lbrace "{"))
 (Token ((101 89) on_sp " "))
 (Token ((101 90) on_op "|"))
 (Token ((101 91) on_ident "tag"))
 (Token ((101 94) on_op "|"))
 (Token ((101 95) on_sp " "))
 (Token ((101 96) on_ivar "@options"))
 (Token ((101 104) on_lbracket "["))
 (Token ((101 105) on_symbeg ":"))
 (Token ((101 106) on_ident "tag"))
 (Token ((101 109) on_rbracket "]"))
 (Token ((101 110) on_sp " "))
 (Token ((101 111) on_op "="))
 (Token ((101 112) on_sp " "))
 (Token ((101 113) on_ident "tag"))
 (Token ((101 116) on_sp " "))
 (Token ((101 117) on_rbrace "}"))
 (Token ((101 118) on_nl "\n"))
 (Token ((102 0) on_ignored_nl "\n"))
 (Token ((103 0) on_sp "          "))
 (Token ((103 10) on_ident "opts"))
 (Token ((103 14) on_period "."))
 (Token ((103 15) on_ident "separator"))
 (Token ((103 24) on_sp " "))
 (Token ((103 25) on_tstring_beg "\""))
 (Token ((103 26) on_tstring_end "\""))
 (Token ((103 27) on_nl "\n"))
 (Token ((104 0) on_sp "          "))
 (Token ((104 10) on_ident "opts"))
 (Token ((104 14) on_period "."))
 (Token ((104 15) on_ident "separator"))
 (Token ((104 24) on_sp " "))
 (Token ((104 25) on_tstring_beg "\""))
 (Token ((104 26) on_tstring_content "Cluster options:"))
 (Token ((104 42) on_tstring_end "\""))
 (Token ((104 43) on_nl "\n"))
 (Token ((105 0) on_ignored_nl "\n"))
 (Token ((106 0) on_sp "          "))
 (Token ((106 10) on_ident "opts"))
 (Token ((106 14) on_period "."))
 (Token ((106 15) on_ident "on"))
 (Token ((106 17) on_lparen "("))
 (Token ((106 18) on_tstring_beg "\""))
 (Token ((106 19) on_tstring_content "-s"))
 (Token ((106 21) on_tstring_end "\""))
 (Token ((106 22) on_comma ","))
 (Token ((106 23) on_sp " "))
 (Token ((106 24) on_tstring_beg "\""))
 (Token ((106 25) on_tstring_content "--servers NUM"))
 (Token ((106 38) on_tstring_end "\""))
 (Token ((106 39) on_comma ","))
 (Token ((106 40) on_sp " "))
 (Token ((106 41) on_tstring_beg "\""))
 (Token ((106 42) on_tstring_content "Number of servers to start"))
 (Token ((106 68) on_tstring_end "\""))
 (Token ((106 69) on_rparen ")"))
 (Token ((106 70) on_sp "                  "))
 (Token ((106 88) on_lbrace "{"))
 (Token ((106 89) on_sp " "))
 (Token ((106 90) on_op "|"))
 (Token ((106 91) on_ident "num"))
 (Token ((106 94) on_op "|"))
 (Token ((106 95) on_sp " "))
 (Token ((106 96) on_ivar "@options"))
 (Token ((106 104) on_lbracket "["))
 (Token ((106 105) on_symbeg ":"))
 (Token ((106 106) on_ident "servers"))
 (Token ((106 113) on_rbracket "]"))
 (Token ((106 114) on_sp " "))
 (Token ((106 115) on_op "="))
 (Token ((106 116) on_sp " "))
 (Token ((106 117) on_ident "num"))
 (Token ((106 120) on_period "."))
 (Token ((106 121) on_ident "to_i"))
 (Token ((106 125) on_sp " "))
 (Token ((106 126) on_rbrace "}"))
 (Token ((106 127) on_nl "\n"))
 (Token ((107 0) on_sp "          "))
 (Token ((107 10) on_ident "opts"))
 (Token ((107 14) on_period "."))
 (Token ((107 15) on_ident "on"))
 (Token ((107 17) on_lparen "("))
 (Token ((107 18) on_tstring_beg "\""))
 (Token ((107 19) on_tstring_content "-o"))
 (Token ((107 21) on_tstring_end "\""))
 (Token ((107 22) on_comma ","))
 (Token ((107 23) on_sp " "))
 (Token ((107 24) on_tstring_beg "\""))
 (Token ((107 25) on_tstring_content "--only NUM"))
 (Token ((107 35) on_tstring_end "\""))
 (Token ((107 36) on_comma ","))
 (Token ((107 37) on_sp " "))
 (Token ((107 38) on_tstring_beg "\""))
 (Token
  ((107 39)
   on_tstring_content
   "Send command to only one server of the cluster"))
 (Token ((107 85) on_tstring_end "\""))
 (Token ((107 86) on_rparen ")"))
 (Token ((107 87) on_sp " "))
 (Token ((107 88) on_lbrace "{"))
 (Token ((107 89) on_sp " "))
 (Token ((107 90) on_op "|"))
 (Token ((107 91) on_ident "only"))
 (Token ((107 95) on_op "|"))
 (Token ((107 96) on_sp " "))
 (Token ((107 97) on_ivar "@options"))
 (Token ((107 105) on_lbracket "["))
 (Token ((107 106) on_symbeg ":"))
 (Token ((107 107) on_ident "only"))
 (Token ((107 111) on_rbracket "]"))
 (Token ((107 112) on_sp " "))
 (Token ((107 113) on_op "="))
 (Token ((107 114) on_sp " "))
 (Token ((107 115) on_ident "only"))
 (Token ((107 119) on_period "."))
 (Token ((107 120) on_ident "to_i"))
 (Token ((107 124) on_sp " "))
 (Token ((107 125) on_rbrace "}"))
 (Token ((107 126) on_nl "\n"))
 (Token ((108 0) on_sp "          "))
 (Token ((108 10) on_ident "opts"))
 (Token ((108 14) on_period "."))
 (Token ((108 15) on_ident "on"))
 (Token ((108 17) on_lparen "("))
 (Token ((108 18) on_tstring_beg "\""))
 (Token ((108 19) on_tstring_content "-C"))
 (Token ((108 21) on_tstring_end "\""))
 (Token ((108 22) on_comma ","))
 (Token ((108 23) on_sp " "))
 (Token ((108 24) on_tstring_beg "\""))
 (Token ((108 25) on_tstring_content "--config FILE"))
 (Token ((108 38) on_tstring_end "\""))
 (Token ((108 39) on_comma ","))
 (Token ((108 40) on_sp " "))
 (Token ((108 41) on_tstring_beg "\""))
 (Token ((108 42) on_tstring_content "Load options from config file"))
 (Token ((108 71) on_tstring_end "\""))
 (Token ((108 72) on_rparen ")"))
 (Token ((108 73) on_sp "               "))
 (Token ((108 88) on_lbrace "{"))
 (Token ((108 89) on_sp " "))
 (Token ((108 90) on_op "|"))
 (Token ((108 91) on_ident "file"))
 (Token ((108 95) on_op "|"))
 (Token ((108 96) on_sp " "))
 (Token ((108 97) on_ivar "@options"))
 (Token ((108 105) on_lbracket "["))
 (Token ((108 106) on_symbeg ":"))
 (Token ((108 107) on_ident "config"))
 (Token ((108 113) on_rbracket "]"))
 (Token ((108 114) on_sp " "))
 (Token ((108 115) on_op "="))
 (Token ((108 116) on_sp " "))
 (Token ((108 117) on_ident "file"))
 (Token ((108 121) on_sp " "))
 (Token ((108 122) on_rbrace "}"))
 (Token ((108 123) on_nl "\n"))
 (Token ((109 0) on_sp "          "))
 (Token ((109 10) on_ident "opts"))
 (Token ((109 14) on_period "."))
 (Token ((109 15) on_ident "on"))
 (Token ((109 17) on_lparen "("))
 (Token ((109 18) on_sp "      "))
 (Token ((109 24) on_tstring_beg "\""))
 (Token ((109 25) on_tstring_content "--all [DIR]"))
 (Token ((109 36) on_tstring_end "\""))
 (Token ((109 37) on_comma ","))
 (Token ((109 38) on_sp " "))
 (Token ((109 39) on_tstring_beg "\""))
 (Token
  ((109 40) on_tstring_content "Send command to each config files in DIR"))
 (Token ((109 80) on_tstring_end "\""))
 (Token ((109 81) on_rparen ")"))
 (Token ((109 82) on_sp "      "))
 (Token ((109 88) on_lbrace "{"))
 (Token ((109 89) on_sp " "))
 (Token ((109 90) on_op "|"))
 (Token ((109 91) on_ident "dir"))
 (Token ((109 94) on_op "|"))
 (Token ((109 95) on_sp " "))
 (Token ((109 96) on_ivar "@options"))
 (Token ((109 104) on_lbracket "["))
 (Token ((109 105) on_symbeg ":"))
 (Token ((109 106) on_ident "all"))
 (Token ((109 109) on_rbracket "]"))
 (Token ((109 110) on_sp " "))
 (Token ((109 111) on_op "="))
 (Token ((109 112) on_sp " "))
 (Token ((109 113) on_ident "dir"))
 (Token ((109 116) on_sp " "))
 (Token ((109 117) on_rbrace "}"))
 (Token ((109 118) on_sp " "))
 (Token ((109 119) on_kw "if"))
 (Token ((109 121) on_sp " "))
 (Token ((109 122) on_const "Thin"))
 (Token ((109 126) on_period "."))
 (Token ((109 127) on_ident "linux?"))
 (Token ((109 133) on_nl "\n"))
 (Token ((110 0) on_sp "          "))
 (Token ((110 10) on_ident "opts"))
 (Token ((110 14) on_period "."))
 (Token ((110 15) on_ident "on"))
 (Token ((110 17) on_lparen "("))
 (Token ((110 18) on_tstring_beg "\""))
 (Token ((110 19) on_tstring_content "-O"))
 (Token ((110 21) on_tstring_end "\""))
 (Token ((110 22) on_comma ","))
 (Token ((110 23) on_sp " "))
 (Token ((110 24) on_tstring_beg "\""))
 (Token ((110 25) on_tstring_content "--onebyone"))
 (Token ((110 35) on_tstring_end "\""))
 (Token ((110 36) on_comma ","))
 (Token ((110 37) on_sp " "))
 (Token ((110 38) on_tstring_beg "\""))
 (Token
  ((110 39)
   on_tstring_content
   "Restart the cluster one by one (only works with restart command)"))
 (Token ((110 103) on_tstring_end "\""))
 (Token ((110 104) on_rparen ")"))
 (Token ((110 105) on_sp " "))
 (Token ((110 106) on_lbrace "{"))
 (Token ((110 107) on_sp " "))
 (Token ((110 108) on_ivar "@options"))
 (Token ((110 116) on_lbracket "["))
 (Token ((110 117) on_symbeg ":"))
 (Token ((110 118) on_ident "onebyone"))
 (Token ((110 126) on_rbracket "]"))
 (Token ((110 127) on_sp " "))
 (Token ((110 128) on_op "="))
 (Token ((110 129) on_sp " "))
 (Token ((110 130) on_kw "true"))
 (Token ((110 134) on_sp " "))
 (Token ((110 135) on_rbrace "}"))
 (Token ((110 136) on_nl "\n"))
 (Token ((111 0) on_sp "          "))
 (Token ((111 10) on_ident "opts"))
 (Token ((111 14) on_period "."))
 (Token ((111 15) on_ident "on"))
 (Token ((111 17) on_lparen "("))
 (Token ((111 18) on_tstring_beg "\""))
 (Token ((111 19) on_tstring_content "-w"))
 (Token ((111 21) on_tstring_end "\""))
 (Token ((111 22) on_comma ","))
 (Token ((111 23) on_sp " "))
 (Token ((111 24) on_tstring_beg "\""))
 (Token ((111 25) on_tstring_content "--wait NUM"))
 (Token ((111 35) on_tstring_end "\""))
 (Token ((111 36) on_comma ","))
 (Token ((111 37) on_sp " "))
 (Token ((111 38) on_tstring_beg "\""))
 (Token
  ((111 39)
   on_tstring_content
   "Maximum wait time for server to be started in seconds (use with -O)"))
 (Token ((111 106) on_tstring_end "\""))
 (Token ((111 107) on_rparen ")"))
 (Token ((111 108) on_sp " "))
 (Token ((111 109) on_lbrace "{"))
 (Token ((111 110) on_sp " "))
 (Token ((111 111) on_op "|"))
 (Token ((111 112) on_ident "time"))
 (Token ((111 116) on_op "|"))
 (Token ((111 117) on_sp " "))
 (Token ((111 118) on_ivar "@options"))
 (Token ((111 126) on_lbracket "["))
 (Token ((111 127) on_symbeg ":"))
 (Token ((111 128) on_ident "wait"))
 (Token ((111 132) on_rbracket "]"))
 (Token ((111 133) on_sp " "))
 (Token ((111 134) on_op "="))
 (Token ((111 135) on_sp " "))
 (Token ((111 136) on_ident "time"))
 (Token ((111 140) on_period "."))
 (Token ((111 141) on_ident "to_i"))
 (Token ((111 145) on_sp " "))
 (Token ((111 146) on_rbrace "}"))
 (Token ((111 147) on_nl "\n"))
 (Token ((112 0) on_sp "        "))
 (Token ((112 8) on_kw "end"))
 (Token ((112 11) on_nl "\n"))
 (Token ((113 0) on_ignored_nl "\n"))
 (Token ((114 0) on_sp "        "))
 (Token ((114 8) on_ident "opts"))
 (Token ((114 12) on_period "."))
 (Token ((114 13) on_ident "separator"))
 (Token ((114 22) on_sp " "))
 (Token ((114 23) on_tstring_beg "\""))
 (Token ((114 24) on_tstring_end "\""))
 (Token ((114 25) on_nl "\n"))
 (Token ((115 0) on_sp "        "))
 (Token ((115 8) on_ident "opts"))
 (Token ((115 12) on_period "."))
 (Token ((115 13) on_ident "separator"))
 (Token ((115 22) on_sp " "))
 (Token ((115 23) on_tstring_beg "\""))
 (Token ((115 24) on_tstring_content "Tuning options:"))
 (Token ((115 39) on_tstring_end "\""))
 (Token ((115 40) on_nl "\n"))
 (Token ((116 0) on_ignored_nl "\n"))
 (Token ((117 0) on_sp "        "))
 (Token ((117 8) on_ident "opts"))
 (Token ((117 12) on_period "."))
 (Token ((117 13) on_ident "on"))
 (Token ((117 15) on_lparen "("))
 (Token ((117 16) on_tstring_beg "\""))
 (Token ((117 17) on_tstring_content "-b"))
 (Token ((117 19) on_tstring_end "\""))
 (Token ((117 20) on_comma ","))
 (Token ((117 21) on_sp " "))
 (Token ((117 22) on_tstring_beg "\""))
 (Token ((117 23) on_tstring_content "--backend CLASS"))
 (Token ((117 38) on_tstring_end "\""))
 (Token ((117 39) on_comma ","))
 (Token ((117 40) on_sp " "))
 (Token ((117 41) on_tstring_beg "\""))
 (Token ((117 42) on_tstring_content "Backend to use, full classname"))
 (Token ((117 72) on_tstring_end "\""))
 (Token ((117 73) on_rparen ")"))
 (Token ((117 74) on_sp "              "))
 (Token ((117 88) on_lbrace "{"))
 (Token ((117 89) on_sp " "))
 (Token ((117 90) on_op "|"))
 (Token ((117 91) on_ident "name"))
 (Token ((117 95) on_op "|"))
 (Token ((117 96) on_sp " "))
 (Token ((117 97) on_ivar "@options"))
 (Token ((117 105) on_lbracket "["))
 (Token ((117 106) on_symbeg ":"))
 (Token ((117 107) on_ident "backend"))
 (Token ((117 114) on_rbracket "]"))
 (Token ((117 115) on_sp " "))
 (Token ((117 116) on_op "="))
 (Token ((117 117) on_sp " "))
 (Token ((117 118) on_ident "name"))
 (Token ((117 122) on_sp " "))
 (Token ((117 123) on_rbrace "}"))
 (Token ((117 124) on_nl "\n"))
 (Token ((118 0) on_sp "        "))
 (Token ((118 8) on_ident "opts"))
 (Token ((118 12) on_period "."))
 (Token ((118 13) on_ident "on"))
 (Token ((118 15) on_lparen "("))
 (Token ((118 16) on_tstring_beg "\""))
 (Token ((118 17) on_tstring_content "-t"))
 (Token ((118 19) on_tstring_end "\""))
 (Token ((118 20) on_comma ","))
 (Token ((118 21) on_sp " "))
 (Token ((118 22) on_tstring_beg "\""))
 (Token ((118 23) on_tstring_content "--timeout SEC"))
 (Token ((118 36) on_tstring_end "\""))
 (Token ((118 37) on_comma ","))
 (Token ((118 38) on_sp " "))
 (Token ((118 39) on_tstring_beg "\""))
 (Token ((118 40) on_tstring_content "Request or command timeout in sec "))
 (Token ((118 74) on_tstring_end "\""))
 (Token ((118 75) on_sp " "))
 (Token ((118 76) on_op "+"))
 (Token ((118 77) on_ignored_nl "\n"))
 (Token ((119 0) on_sp "                                       "))
 (Token ((119 39) on_tstring_beg "\""))
 (Token ((119 40) on_tstring_content "(default: "))
 (Token ((119 50) on_embexpr_beg "\\#{"))
 (Token ((119 52) on_ivar "@options"))
 (Token ((119 60) on_lbracket "["))
 (Token ((119 61) on_symbeg ":"))
 (Token ((119 62) on_ident "timeout"))
 (Token ((119 69) on_rbracket "]"))
 (Token ((119 70) on_embexpr_end "}"))
 (Token ((119 71) on_tstring_content ")"))
 (Token ((119 72) on_tstring_end "\""))
 (Token ((119 73) on_rparen ")"))
 (Token ((119 74) on_sp "              "))
 (Token ((119 88) on_lbrace "{"))
 (Token ((119 89) on_sp " "))
 (Token ((119 90) on_op "|"))
 (Token ((119 91) on_ident "sec"))
 (Token ((119 94) on_op "|"))
 (Token ((119 95) on_sp " "))
 (Token ((119 96) on_ivar "@options"))
 (Token ((119 104) on_lbracket "["))
 (Token ((119 105) on_symbeg ":"))
 (Token ((119 106) on_ident "timeout"))
 (Token ((119 113) on_rbracket "]"))
 (Token ((119 114) on_sp " "))
 (Token ((119 115) on_op "="))
 (Token ((119 116) on_sp " "))
 (Token ((119 117) on_ident "sec"))
 (Token ((119 120) on_period "."))
 (Token ((119 121) on_ident "to_i"))
 (Token ((119 125) on_sp " "))
 (Token ((119 126) on_rbrace "}"))
 (Token ((119 127) on_nl "\n"))
 (Token ((120 0) on_sp "        "))
 (Token ((120 8) on_ident "opts"))
 (Token ((120 12) on_period "."))
 (Token ((120 13) on_ident "on"))
 (Token ((120 15) on_lparen "("))
 (Token ((120 16) on_tstring_beg "\""))
 (Token ((120 17) on_tstring_content "-f"))
 (Token ((120 19) on_tstring_end "\""))
 (Token ((120 20) on_comma ","))
 (Token ((120 21) on_sp " "))
 (Token ((120 22) on_tstring_beg "\""))
 (Token ((120 23) on_tstring_content "--force"))
 (Token ((120 30) on_tstring_end "\""))
 (Token ((120 31) on_comma ","))
 (Token ((120 32) on_sp " "))
 (Token ((120 33) on_tstring_beg "\""))
 (Token ((120 34) on_tstring_content "Force the execution of the command"))
 (Token ((120 68) on_tstring_end "\""))
 (Token ((120 69) on_rparen ")"))
 (Token ((120 70) on_sp "                  "))
 (Token ((120 88) on_lbrace "{"))
 (Token ((120 89) on_sp " "))
 (Token ((120 90) on_ivar "@options"))
 (Token ((120 98) on_lbracket "["))
 (Token ((120 99) on_symbeg ":"))
 (Token ((120 100) on_ident "force"))
 (Token ((120 105) on_rbracket "]"))
 (Token ((120 106) on_sp " "))
 (Token ((120 107) on_op "="))
 (Token ((120 108) on_sp " "))
 (Token ((120 109) on_kw "true"))
 (Token ((120 113) on_sp " "))
 (Token ((120 114) on_rbrace "}"))
 (Token ((120 115) on_nl "\n"))
 (Token ((121 0) on_sp "        "))
 (Token ((121 8) on_ident "opts"))
 (Token ((121 12) on_period "."))
 (Token ((121 13) on_ident "on"))
 (Token ((121 15) on_lparen "("))
 (Token ((121 16) on_sp "      "))
 (Token ((121 22) on_tstring_beg "\""))
 (Token ((121 23) on_tstring_content "--max-conns NUM"))
 (Token ((121 38) on_tstring_end "\""))
 (Token ((121 39) on_comma ","))
 (Token ((121 40) on_sp " "))
 (Token ((121 41) on_tstring_beg "\""))
 (Token
  ((121 42) on_tstring_content "Maximum number of open file descriptors "))
 (Token ((121 82) on_tstring_end "\""))
 (Token ((121 83) on_sp " "))
 (Token ((121 84) on_op "+"))
 (Token ((121 85) on_ignored_nl "\n"))
 (Token ((122 0) on_sp "                                         "))
 (Token ((122 41) on_tstring_beg "\""))
 (Token ((122 42) on_tstring_content "(default: "))
 (Token ((122 52) on_embexpr_beg "\\#{"))
 (Token ((122 54) on_ivar "@options"))
 (Token ((122 62) on_lbracket "["))
 (Token ((122 63) on_symbeg ":"))
 (Token ((122 64) on_ident "max_conns"))
 (Token ((122 73) on_rbracket "]"))
 (Token ((122 74) on_embexpr_end "}"))
 (Token ((122 75) on_tstring_content ")"))
 (Token ((122 76) on_tstring_end "\""))
 (Token ((122 77) on_comma ","))
 (Token ((122 78) on_ignored_nl "\n"))
 (Token ((123 0) on_sp "                                         "))
 (Token ((123 41) on_tstring_beg "\""))
 (Token
  ((123 42) on_tstring_content "Might require sudo to set higher than 1024"))
 (Token ((123 84) on_tstring_end "\""))
 (Token ((123 85) on_rparen ")"))
 (Token ((123 86) on_sp "  "))
 (Token ((123 88) on_lbrace "{"))
 (Token ((123 89) on_sp " "))
 (Token ((123 90) on_op "|"))
 (Token ((123 91) on_ident "num"))
 (Token ((123 94) on_op "|"))
 (Token ((123 95) on_sp " "))
 (Token ((123 96) on_ivar "@options"))
 (Token ((123 104) on_lbracket "["))
 (Token ((123 105) on_symbeg ":"))
 (Token ((123 106) on_ident "max_conns"))
 (Token ((123 115) on_rbracket "]"))
 (Token ((123 116) on_sp " "))
 (Token ((123 117) on_op "="))
 (Token ((123 118) on_sp " "))
 (Token ((123 119) on_ident "num"))
 (Token ((123 122) on_period "."))
 (Token ((123 123) on_ident "to_i"))
 (Token ((123 127) on_sp " "))
 (Token ((123 128) on_rbrace "}"))
 (Token ((123 129) on_sp " "))
 (Token ((123 130) on_kw "unless"))
 (Token ((123 136) on_sp " "))
 (Token ((123 137) on_const "Thin"))
 (Token ((123 141) on_period "."))
 (Token ((123 142) on_ident "win?"))
 (Token ((123 146) on_nl "\n"))
 (Token ((124 0) on_sp "        "))
 (Token ((124 8) on_ident "opts"))
 (Token ((124 12) on_period "."))
 (Token ((124 13) on_ident "on"))
 (Token ((124 15) on_lparen "("))
 (Token ((124 16) on_sp "      "))
 (Token ((124 22) on_tstring_beg "\""))
 (Token ((124 23) on_tstring_content "--max-persistent-conns NUM"))
 (Token ((124 49) on_tstring_end "\""))
 (Token ((124 50) on_comma ","))
 (Token ((124 51) on_ignored_nl "\n"))
 (Token ((125 0) on_sp "                                       "))
 (Token ((125 39) on_tstring_beg "\""))
 (Token
  ((125 40) on_tstring_content "Maximum number of persistent connections"))
 (Token ((125 80) on_tstring_end "\""))
 (Token ((125 81) on_comma ","))
 (Token ((125 82) on_ignored_nl "\n"))
 (Token ((126 0) on_sp "                                       "))
 (Token ((126 39) on_tstring_beg "\""))
 (Token ((126 40) on_tstring_content "(default: "))
 (Token ((126 50) on_embexpr_beg "\\#{"))
 (Token ((126 52) on_ivar "@options"))
 (Token ((126 60) on_lbracket "["))
 (Token ((126 61) on_symbeg ":"))
 (Token ((126 62) on_ident "max_persistent_conns"))
 (Token ((126 82) on_rbracket "]"))
 (Token ((126 83) on_embexpr_end "}"))
 (Token ((126 84) on_tstring_content ")"))
 (Token ((126 85) on_tstring_end "\""))
 (Token ((126 86) on_rparen ")"))
 (Token ((126 87) on_sp " "))
 (Token ((126 88) on_lbrace "{"))
 (Token ((126 89) on_sp " "))
 (Token ((126 90) on_op "|"))
 (Token ((126 91) on_ident "num"))
 (Token ((126 94) on_op "|"))
 (Token ((126 95) on_sp " "))
 (Token ((126 96) on_ivar "@options"))
 (Token ((126 104) on_lbracket "["))
 (Token ((126 105) on_symbeg ":"))
 (Token ((126 106) on_ident "max_persistent_conns"))
 (Token ((126 126) on_rbracket "]"))
 (Token ((126 127) on_sp " "))
 (Token ((126 128) on_op "="))
 (Token ((126 129) on_sp " "))
 (Token ((126 130) on_ident "num"))
 (Token ((126 133) on_period "."))
 (Token ((126 134) on_ident "to_i"))
 (Token ((126 138) on_sp " "))
 (Token ((126 139) on_rbrace "}"))
 (Token ((126 140) on_nl "\n"))
 (Token ((127 0) on_sp "        "))
 (Token ((127 8) on_ident "opts"))
 (Token ((127 12) on_period "."))
 (Token ((127 13) on_ident "on"))
 (Token ((127 15) on_lparen "("))
 (Token ((127 16) on_sp "      "))
 (Token ((127 22) on_tstring_beg "\""))
 (Token ((127 23) on_tstring_content "--threaded"))
 (Token ((127 33) on_tstring_end "\""))
 (Token ((127 34) on_comma ","))
 (Token ((127 35) on_sp " "))
 (Token ((127 36) on_tstring_beg "\""))
 (Token ((127 37) on_tstring_content "Call the Rack application in threads "))
 (Token ((127 74) on_tstring_end "\""))
 (Token ((127 75) on_sp " "))
 (Token ((127 76) on_op "+"))
 (Token ((127 77) on_ignored_nl "\n"))
 (Token ((128 0) on_sp "                                    "))
 (Token ((128 36) on_tstring_beg "\""))
 (Token ((128 37) on_tstring_content "[experimental]"))
 (Token ((128 51) on_tstring_end "\""))
 (Token ((128 52) on_rparen ")"))
 (Token ((128 53) on_sp "                                   "))
 (Token ((128 88) on_lbrace "{"))
 (Token ((128 89) on_sp " "))
 (Token ((128 90) on_ivar "@options"))
 (Token ((128 98) on_lbracket "["))
 (Token ((128 99) on_symbeg ":"))
 (Token ((128 100) on_ident "threaded"))
 (Token ((128 108) on_rbracket "]"))
 (Token ((128 109) on_sp " "))
 (Token ((128 110) on_op "="))
 (Token ((128 111) on_sp " "))
 (Token ((128 112) on_kw "true"))
 (Token ((128 116) on_sp " "))
 (Token ((128 117) on_rbrace "}"))
 (Token ((128 118) on_nl "\n"))
 (Token ((129 0) on_sp "        "))
 (Token ((129 8) on_ident "opts"))
 (Token ((129 12) on_period "."))
 (Token ((129 13) on_ident "on"))
 (Token ((129 15) on_lparen "("))
 (Token ((129 16) on_sp "      "))
 (Token ((129 22) on_tstring_beg "\""))
 (Token ((129 23) on_tstring_content "--threadpool-size NUM"))
 (Token ((129 44) on_tstring_end "\""))
 (Token ((129 45) on_comma ","))
 (Token ((129 46) on_sp " "))
 (Token ((129 47) on_tstring_beg "\""))
 (Token
  ((129 48)
   on_tstring_content
   "Sets the size of the EventMachine threadpool."))
 (Token ((129 93) on_tstring_end "\""))
 (Token ((129 94) on_comma ","))
 (Token ((129 95) on_ignored_nl "\n"))
 (Token ((130 0) on_sp "                                       "))
 (Token ((130 39) on_tstring_beg "\""))
 (Token ((130 40) on_tstring_content "(default: "))
 (Token ((130 50) on_embexpr_beg "\\#{"))
 (Token ((130 52) on_ivar "@options"))
 (Token ((130 60) on_lbracket "["))
 (Token ((130 61) on_symbeg ":"))
 (Token ((130 62) on_ident "threadpool_size"))
 (Token ((130 77) on_rbracket "]"))
 (Token ((130 78) on_embexpr_end "}"))
 (Token ((130 79) on_tstring_content ")"))
 (Token ((130 80) on_tstring_end "\""))
 (Token ((130 81) on_rparen ")"))
 (Token ((130 82) on_sp " "))
 (Token ((130 83) on_lbrace "{"))
 (Token ((130 84) on_sp " "))
 (Token ((130 85) on_op "|"))
 (Token ((130 86) on_ident "num"))
 (Token ((130 89) on_op "|"))
 (Token ((130 90) on_sp " "))
 (Token ((130 91) on_ivar "@options"))
 (Token ((130 99) on_lbracket "["))
 (Token ((130 100) on_symbeg ":"))
 (Token ((130 101) on_ident "threadpool_size"))
 (Token ((130 116) on_rbracket "]"))
 (Token ((130 117) on_sp " "))
 (Token ((130 118) on_op "="))
 (Token ((130 119) on_sp " "))
 (Token ((130 120) on_ident "num"))
 (Token ((130 123) on_period "."))
 (Token ((130 124) on_ident "to_i"))
 (Token ((130 128) on_sp " "))
 (Token ((130 129) on_rbrace "}"))
 (Token ((130 130) on_nl "\n"))
 (Token ((131 0) on_sp "        "))
 (Token ((131 8) on_ident "opts"))
 (Token ((131 12) on_period "."))
 (Token ((131 13) on_ident "on"))
 (Token ((131 15) on_lparen "("))
 (Token ((131 16) on_sp "      "))
 (Token ((131 22) on_tstring_beg "\""))
 (Token ((131 23) on_tstring_content "--no-epoll"))
 (Token ((131 33) on_tstring_end "\""))
 (Token ((131 34) on_comma ","))
 (Token ((131 35) on_sp " "))
 (Token ((131 36) on_tstring_beg "\""))
 (Token ((131 37) on_tstring_content "Disable the use of epoll"))
 (Token ((131 61) on_tstring_end "\""))
 (Token ((131 62) on_rparen ")"))
 (Token ((131 63) on_sp "                         "))
 (Token ((131 88) on_lbrace "{"))
 (Token ((131 89) on_sp " "))
 (Token ((131 90) on_ivar "@options"))
 (Token ((131 98) on_lbracket "["))
 (Token ((131 99) on_symbeg ":"))
 (Token ((131 100) on_ident "no_epoll"))
 (Token ((131 108) on_rbracket "]"))
 (Token ((131 109) on_sp " "))
 (Token ((131 110) on_op "="))
 (Token ((131 111) on_sp " "))
 (Token ((131 112) on_kw "true"))
 (Token ((131 116) on_sp " "))
 (Token ((131 117) on_rbrace "}"))
 (Token ((131 118) on_sp " "))
 (Token ((131 119) on_kw "if"))
 (Token ((131 121) on_sp " "))
 (Token ((131 122) on_const "Thin"))
 (Token ((131 126) on_period "."))
 (Token ((131 127) on_ident "linux?"))
 (Token ((131 133) on_nl "\n"))
 (Token ((132 0) on_ignored_nl "\n"))
 (Token ((133 0) on_sp "        "))
 (Token ((133 8) on_ident "opts"))
 (Token ((133 12) on_period "."))
 (Token ((133 13) on_ident "separator"))
 (Token ((133 22) on_sp " "))
 (Token ((133 23) on_tstring_beg "\""))
 (Token ((133 24) on_tstring_end "\""))
 (Token ((133 25) on_nl "\n"))
 (Token ((134 0) on_sp "        "))
 (Token ((134 8) on_ident "opts"))
 (Token ((134 12) on_period "."))
 (Token ((134 13) on_ident "separator"))
 (Token ((134 22) on_sp " "))
 (Token ((134 23) on_tstring_beg "\""))
 (Token ((134 24) on_tstring_content "Common options:"))
 (Token ((134 39) on_tstring_end "\""))
 (Token ((134 40) on_nl "\n"))
 (Token ((135 0) on_ignored_nl "\n"))
 (Token ((136 0) on_sp "        "))
 (Token ((136 8) on_ident "opts"))
 (Token ((136 12) on_period "."))
 (Token ((136 13) on_ident "on_tail"))
 (Token ((136 20) on_lparen "("))
 (Token ((136 21) on_tstring_beg "\""))
 (Token ((136 22) on_tstring_content "-r"))
 (Token ((136 24) on_tstring_end "\""))
 (Token ((136 25) on_comma ","))
 (Token ((136 26) on_sp " "))
 (Token ((136 27) on_tstring_beg "\""))
 (Token ((136 28) on_tstring_content "--require FILE"))
 (Token ((136 42) on_tstring_end "\""))
 (Token ((136 43) on_comma ","))
 (Token ((136 44) on_sp " "))
 (Token ((136 45) on_tstring_beg "\""))
 (Token ((136 46) on_tstring_content "require the library"))
 (Token ((136 65) on_tstring_end "\""))
 (Token ((136 66) on_rparen ")"))
 (Token ((136 67) on_sp "                     "))
 (Token ((136 88) on_lbrace "{"))
 (Token ((136 89) on_sp " "))
 (Token ((136 90) on_op "|"))
 (Token ((136 91) on_ident "file"))
 (Token ((136 95) on_op "|"))
 (Token ((136 96) on_sp " "))
 (Token ((136 97) on_ivar "@options"))
 (Token ((136 105) on_lbracket "["))
 (Token ((136 106) on_symbeg ":"))
 (Token ((136 107) on_ident "require"))
 (Token ((136 114) on_rbracket "]"))
 (Token ((136 115) on_sp " "))
 (Token ((136 116) on_op "<<"))
 (Token ((136 118) on_sp " "))
 (Token ((136 119) on_ident "file"))
 (Token ((136 123) on_sp " "))
 (Token ((136 124) on_rbrace "}"))
 (Token ((136 125) on_nl "\n"))
 (Token ((137 0) on_sp "        "))
 (Token ((137 8) on_ident "opts"))
 (Token ((137 12) on_period "."))
 (Token ((137 13) on_ident "on_tail"))
 (Token ((137 20) on_lparen "("))
 (Token ((137 21) on_tstring_beg "\""))
 (Token ((137 22) on_tstring_content "-q"))
 (Token ((137 24) on_tstring_end "\""))
 (Token ((137 25) on_comma ","))
 (Token ((137 26) on_sp " "))
 (Token ((137 27) on_tstring_beg "\""))
 (Token ((137 28) on_tstring_content "--quiet"))
 (Token ((137 35) on_tstring_end "\""))
 (Token ((137 36) on_comma ","))
 (Token ((137 37) on_sp " "))
 (Token ((137 38) on_tstring_beg "\""))
 (Token ((137 39) on_tstring_content "Silence all logging"))
 (Token ((137 58) on_tstring_end "\""))
 (Token ((137 59) on_rparen ")"))
 (Token ((137 60) on_sp "                            "))
 (Token ((137 88) on_lbrace "{"))
 (Token ((137 89) on_sp " "))
 (Token ((137 90) on_ivar "@options"))
 (Token ((137 98) on_lbracket "["))
 (Token ((137 99) on_symbeg ":"))
 (Token ((137 100) on_ident "quiet"))
 (Token ((137 105) on_rbracket "]"))
 (Token ((137 106) on_sp " "))
 (Token ((137 107) on_op "="))
 (Token ((137 108) on_sp " "))
 (Token ((137 109) on_kw "true"))
 (Token ((137 113) on_sp " "))
 (Token ((137 114) on_rbrace "}"))
 (Token ((137 115) on_nl "\n"))
 (Token ((138 0) on_sp "        "))
 (Token ((138 8) on_ident "opts"))
 (Token ((138 12) on_period "."))
 (Token ((138 13) on_ident "on_tail"))
 (Token ((138 20) on_lparen "("))
 (Token ((138 21) on_tstring_beg "\""))
 (Token ((138 22) on_tstring_content "-D"))
 (Token ((138 24) on_tstring_end "\""))
 (Token ((138 25) on_comma ","))
 (Token ((138 26) on_sp " "))
 (Token ((138 27) on_tstring_beg "\""))
 (Token ((138 28) on_tstring_content "--debug"))
 (Token ((138 35) on_tstring_end "\""))
 (Token ((138 36) on_comma ","))
 (Token ((138 37) on_sp " "))
 (Token ((138 38) on_tstring_beg "\""))
 (Token ((138 39) on_tstring_content "Enable debug logging"))
 (Token ((138 59) on_tstring_end "\""))
 (Token ((138 60) on_rparen ")"))
 (Token ((138 61) on_sp "                           "))
 (Token ((138 88) on_lbrace "{"))
 (Token ((138 89) on_sp " "))
 (Token ((138 90) on_ivar "@options"))
 (Token ((138 98) on_lbracket "["))
 (Token ((138 99) on_symbeg ":"))
 (Token ((138 100) on_ident "debug"))
 (Token ((138 105) on_rbracket "]"))
 (Token ((138 106) on_sp " "))
 (Token ((138 107) on_op "="))
 (Token ((138 108) on_sp " "))
 (Token ((138 109) on_kw "true"))
 (Token ((138 113) on_sp " "))
 (Token ((138 114) on_rbrace "}"))
 (Token ((138 115) on_nl "\n"))
 (Token ((139 0) on_sp "        "))
 (Token ((139 8) on_ident "opts"))
 (Token ((139 12) on_period "."))
 (Token ((139 13) on_ident "on_tail"))
 (Token ((139 20) on_lparen "("))
 (Token ((139 21) on_tstring_beg "\""))
 (Token ((139 22) on_tstring_content "-V"))
 (Token ((139 24) on_tstring_end "\""))
 (Token ((139 25) on_comma ","))
 (Token ((139 26) on_sp " "))
 (Token ((139 27) on_tstring_beg "\""))
 (Token ((139 28) on_tstring_content "--trace"))
 (Token ((139 35) on_tstring_end "\""))
 (Token ((139 36) on_comma ","))
 (Token ((139 37) on_sp " "))
 (Token ((139 38) on_tstring_beg "\""))
 (Token
  ((139 39) on_tstring_content "Set tracing on (log raw request/response)"))
 (Token ((139 80) on_tstring_end "\""))
 (Token ((139 81) on_rparen ")"))
 (Token ((139 82) on_sp "      "))
 (Token ((139 88) on_lbrace "{"))
 (Token ((139 89) on_sp " "))
 (Token ((139 90) on_ivar "@options"))
 (Token ((139 98) on_lbracket "["))
 (Token ((139 99) on_symbeg ":"))
 (Token ((139 100) on_ident "trace"))
 (Token ((139 105) on_rbracket "]"))
 (Token ((139 106) on_sp " "))
 (Token ((139 107) on_op "="))
 (Token ((139 108) on_sp " "))
 (Token ((139 109) on_kw "true"))
 (Token ((139 113) on_sp " "))
 (Token ((139 114) on_rbrace "}"))
 (Token ((139 115) on_nl "\n"))
 (Token ((140 0) on_sp "        "))
 (Token ((140 8) on_ident "opts"))
 (Token ((140 12) on_period "."))
 (Token ((140 13) on_ident "on_tail"))
 (Token ((140 20) on_lparen "("))
 (Token ((140 21) on_tstring_beg "\""))
 (Token ((140 22) on_tstring_content "-h"))
 (Token ((140 24) on_tstring_end "\""))
 (Token ((140 25) on_comma ","))
 (Token ((140 26) on_sp " "))
 (Token ((140 27) on_tstring_beg "\""))
 (Token ((140 28) on_tstring_content "--help"))
 (Token ((140 34) on_tstring_end "\""))
 (Token ((140 35) on_comma ","))
 (Token ((140 36) on_sp " "))
 (Token ((140 37) on_tstring_beg "\""))
 (Token ((140 38) on_tstring_content "Show this message"))
 (Token ((140 55) on_tstring_end "\""))
 (Token ((140 56) on_rparen ")"))
 (Token ((140 57) on_sp "                               "))
 (Token ((140 88) on_lbrace "{"))
 (Token ((140 89) on_sp " "))
 (Token ((140 90) on_ident "puts"))
 (Token ((140 94) on_sp " "))
 (Token ((140 95) on_ident "opts"))
 (Token ((140 99) on_semicolon ";"))
 (Token ((140 100) on_sp " "))
 (Token ((140 101) on_ident "exit"))
 (Token ((140 105) on_sp " "))
 (Token ((140 106) on_rbrace "}"))
 (Token ((140 107) on_nl "\n"))
 (Token ((141 0) on_sp "        "))
 (Token ((141 8) on_ident "opts"))
 (Token ((141 12) on_period "."))
 (Token ((141 13) on_ident "on_tail"))
 (Token ((141 20) on_lparen "("))
 (Token ((141 21) on_tstring_beg "'"))
 (Token ((141 22) on_tstring_content "-v"))
 (Token ((141 24) on_tstring_end "'"))
 (Token ((141 25) on_comma ","))
 (Token ((141 26) on_sp " "))
 (Token ((141 27) on_tstring_beg "'"))
 (Token ((141 28) on_tstring_content "--version"))
 (Token ((141 37) on_tstring_end "'"))
 (Token ((141 38) on_comma ","))
 (Token ((141 39) on_sp " "))
 (Token ((141 40) on_tstring_beg "\""))
 (Token ((141 41) on_tstring_content "Show version"))
 (Token ((141 53) on_tstring_end "\""))
 (Token ((141 54) on_rparen ")"))
 (Token ((141 55) on_sp "                                 "))
 (Token ((141 88) on_lbrace "{"))
 (Token ((141 89) on_sp " "))
 (Token ((141 90) on_ident "puts"))
 (Token ((141 94) on_sp " "))
 (Token ((141 95) on_const "Thin"))
 (Token ((141 99) on_op "::"))
 (Token ((141 101) on_const "SERVER"))
 (Token ((141 107) on_semicolon ";"))
 (Token ((141 108) on_sp " "))
 (Token ((141 109) on_ident "exit"))
 (Token ((141 113) on_sp " "))
 (Token ((141 114) on_rbrace "}"))
 (Token ((141 115) on_nl "\n"))
 (Token ((142 0) on_sp "      "))
 (Token ((142 6) on_kw "end"))
 (Token ((142 9) on_nl "\n"))
 (Token ((143 0) on_sp "    "))
 (Token ((143 4) on_kw "end"))
 (Token ((143 7) on_nl "\n"))
 (Token ((144 0) on_ignored_nl "\n"))
 (Token ((145 0) on_sp "    "))
 (Token ((145 4) on_comment "# Parse the options.\n"))
 (Token ((146 0) on_sp "    "))
 (Token ((146 4) on_kw "def"))
 (Token ((146 7) on_sp " "))
 (Token ((146 8) on_ident "parse!"))
 (Token ((146 14) on_nl "\n"))
 (Token ((147 0) on_sp "      "))
 (Token ((147 6) on_ident "parser"))
 (Token ((147 12) on_period "."))
 (Token ((147 13) on_ident "parse!"))
 (Token ((147 19) on_sp " "))
 (Token ((147 20) on_ivar "@argv"))
 (Token ((147 25) on_nl "\n"))
 (Token ((148 0) on_sp "      "))
 (Token ((148 6) on_ivar "@command"))
 (Token ((148 14) on_sp "   "))
 (Token ((148 17) on_op "="))
 (Token ((148 18) on_sp " "))
 (Token ((148 19) on_ivar "@argv"))
 (Token ((148 24) on_period "."))
 (Token ((148 25) on_ident "shift"))
 (Token ((148 30) on_nl "\n"))
 (Token ((149 0) on_sp "      "))
 (Token ((149 6) on_ivar "@arguments"))
 (Token ((149 16) on_sp " "))
 (Token ((149 17) on_op "="))
 (Token ((149 18) on_sp " "))
 (Token ((149 19) on_ivar "@argv"))
 (Token ((149 24) on_nl "\n"))
 (Token ((150 0) on_sp "    "))
 (Token ((150 4) on_kw "end"))
 (Token ((150 7) on_nl "\n"))
 (Token ((151 0) on_ignored_nl "\n"))
 (Token ((152 0) on_sp "    "))
 (Token
  ((152 4)
   on_comment
   "# Parse the current shell arguments and run the command.\n"))
 (Token ((153 0) on_sp "    "))
 (Token ((153 4) on_comment "# Exits on error.\n"))
 (Token ((154 0) on_sp "    "))
 (Token ((154 4) on_kw "def"))
 (Token ((154 7) on_sp " "))
 (Token ((154 8) on_ident "run!"))
 (Token ((154 12) on_nl "\n"))
 (Token ((155 0) on_sp "      "))
 (Token ((155 6) on_kw "if"))
 (Token ((155 8) on_sp " "))
 (Token ((155 9) on_kw "self"))
 (Token ((155 13) on_period "."))
 (Token ((155 14) on_ident "class"))
 (Token ((155 19) on_period "."))
 (Token ((155 20) on_ident "commands"))
 (Token ((155 28) on_period "."))
 (Token ((155 29) on_ident "include?"))
 (Token ((155 37) on_lparen "("))
 (Token ((155 38) on_ivar "@command"))
 (Token ((155 46) on_rparen ")"))
 (Token ((155 47) on_nl "\n"))
 (Token ((156 0) on_sp "        "))
 (Token ((156 8) on_ident "run_command"))
 (Token ((156 19) on_nl "\n"))
 (Token ((157 0) on_sp "      "))
 (Token ((157 6) on_kw "elsif"))
 (Token ((157 11) on_sp " "))
 (Token ((157 12) on_ivar "@command"))
 (Token ((157 20) on_period "."))
 (Token ((157 21) on_ident "nil?"))
 (Token ((157 25) on_nl "\n"))
 (Token ((158 0) on_sp "        "))
 (Token ((158 8) on_ident "puts"))
 (Token ((158 12) on_sp " "))
 (Token ((158 13) on_tstring_beg "\""))
 (Token ((158 14) on_tstring_content "Command required"))
 (Token ((158 30) on_tstring_end "\""))
 (Token ((158 31) on_nl "\n"))
 (Token ((159 0) on_sp "        "))
 (Token ((159 8) on_ident "puts"))
 (Token ((159 12) on_sp " "))
 (Token ((159 13) on_ivar "@parser"))
 (Token ((159 20) on_nl "\n"))
 (Token ((160 0) on_sp "        "))
 (Token ((160 8) on_ident "exit"))
 (Token ((160 12) on_sp " "))
 (Token ((160 13) on_int "1"))
 (Token ((160 14) on_nl "\n"))
 (Token ((161 0) on_sp "      "))
 (Token ((161 6) on_kw "else"))
 (Token ((161 10) on_ignored_nl "\n"))
 (Token ((162 0) on_sp "        "))
 (Token ((162 8) on_ident "abort"))
 (Token ((162 13) on_sp " "))
 (Token ((162 14) on_tstring_beg "\""))
 (Token ((162 15) on_tstring_content "Unknown command: "))
 (Token ((162 32) on_embexpr_beg "\\#{"))
 (Token ((162 34) on_ivar "@command"))
 (Token ((162 42) on_embexpr_end "}"))
 (Token ((162 43) on_tstring_content ". Use one of "))
 (Token ((162 56) on_embexpr_beg "\\#{"))
 (Token ((162 58) on_kw "self"))
 (Token ((162 62) on_period "."))
 (Token ((162 63) on_ident "class"))
 (Token ((162 68) on_period "."))
 (Token ((162 69) on_ident "commands"))
 (Token ((162 77) on_period "."))
 (Token ((162 78) on_ident "join"))
 (Token ((162 82) on_lparen "("))
 (Token ((162 83) on_tstring_beg "'"))
 (Token ((162 84) on_tstring_content ", "))
 (Token ((162 86) on_tstring_end "'"))
 (Token ((162 87) on_rparen ")"))
 (Token ((162 88) on_embexpr_end "}"))
 (Token ((162 89) on_tstring_end "\""))
 (Token ((162 90) on_nl "\n"))
 (Token ((163 0) on_sp "      "))
 (Token ((163 6) on_kw "end"))
 (Token ((163 9) on_nl "\n"))
 (Token ((164 0) on_sp "    "))
 (Token ((164 4) on_kw "end"))
 (Token ((164 7) on_nl "\n"))
 (Token ((165 0) on_ignored_nl "\n"))
 (Token ((166 0) on_sp "    "))
 (Token
  ((166 4)
   on_comment
   "# Send the command to the controller: single instance or cluster.\n"))
 (Token ((167 0) on_sp "    "))
 (Token ((167 4) on_kw "def"))
 (Token ((167 7) on_sp " "))
 (Token ((167 8) on_ident "run_command"))
 (Token ((167 19) on_nl "\n"))
 (Token ((168 0) on_sp "      "))
 (Token ((168 6) on_ident "load_options_from_config_file!"))
 (Token ((168 36) on_sp " "))
 (Token ((168 37) on_kw "unless"))
 (Token ((168 43) on_sp " "))
 (Token ((168 44) on_const "CONFIGLESS_COMMANDS"))
 (Token ((168 63) on_period "."))
 (Token ((168 64) on_ident "include?"))
 (Token ((168 72) on_lparen "("))
 (Token ((168 73) on_ivar "@command"))
 (Token ((168 81) on_rparen ")"))
 (Token ((168 82) on_nl "\n"))
 (Token ((169 0) on_ignored_nl "\n"))
 (Token ((170 0) on_sp "      "))
 (Token
  ((170 6)
   on_comment
   "# PROGRAM_NAME is relative to the current directory, so make sure\n"))
 (Token ((171 0) on_sp "      "))
 (Token
  ((171 6) on_comment "# we store and expand it before changing directory.\n"))
 (Token ((172 0) on_sp "      "))
 (Token ((172 6) on_const "Command"))
 (Token ((172 13) on_period "."))
 (Token ((172 14) on_ident "script"))
 (Token ((172 20) on_sp " "))
 (Token ((172 21) on_op "="))
 (Token ((172 22) on_sp " "))
 (Token ((172 23) on_const "File"))
 (Token ((172 27) on_period "."))
 (Token ((172 28) on_ident "expand_path"))
 (Token ((172 39) on_lparen "("))
 (Token ((172 40) on_gvar "$PROGRAM_NAME"))
 (Token ((172 53) on_rparen ")"))
 (Token ((172 54) on_nl "\n"))
 (Token ((173 0) on_ignored_nl "\n"))
 (Token ((174 0) on_sp "      "))
 (Token
  ((174 6)
   on_comment
   "# Change the current directory ASAP so that all relative paths are\n"))
 (Token ((175 0) on_sp "      "))
 (Token ((175 6) on_comment "# relative to this one.\n"))
 (Token ((176 0) on_sp "      "))
 (Token ((176 6) on_const "Dir"))
 (Token ((176 9) on_period "."))
 (Token ((176 10) on_ident "chdir"))
 (Token ((176 15) on_lparen "("))
 (Token ((176 16) on_ivar "@options"))
 (Token ((176 24) on_lbracket "["))
 (Token ((176 25) on_symbeg ":"))
 (Token ((176 26) on_ident "chdir"))
 (Token ((176 31) on_rbracket "]"))
 (Token ((176 32) on_rparen ")"))
 (Token ((176 33) on_sp " "))
 (Token ((176 34) on_kw "unless"))
 (Token ((176 40) on_sp " "))
 (Token ((176 41) on_const "CONFIGLESS_COMMANDS"))
 (Token ((176 60) on_period "."))
 (Token ((176 61) on_ident "include?"))
 (Token ((176 69) on_lparen "("))
 (Token ((176 70) on_ivar "@command"))
 (Token ((176 78) on_rparen ")"))
 (Token ((176 79) on_nl "\n"))
 (Token ((177 0) on_ignored_nl "\n"))
 (Token ((178 0) on_sp "      "))
 (Token ((178 6) on_ivar "@options"))
 (Token ((178 14) on_lbracket "["))
 (Token ((178 15) on_symbeg ":"))
 (Token ((178 16) on_ident "require"))
 (Token ((178 23) on_rbracket "]"))
 (Token ((178 24) on_period "."))
 (Token ((178 25) on_ident "each"))
 (Token ((178 29) on_sp " "))
 (Token ((178 30) on_lbrace "{"))
 (Token ((178 31) on_sp " "))
 (Token ((178 32) on_op "|"))
 (Token ((178 33) on_ident "r"))
 (Token ((178 34) on_op "|"))
 (Token ((178 35) on_sp " "))
 (Token ((178 36) on_ident "ruby_require"))
 (Token ((178 48) on_sp " "))
 (Token ((178 49) on_ident "r"))
 (Token ((178 50) on_sp " "))
 (Token ((178 51) on_rbrace "}"))
 (Token ((178 52) on_nl "\n"))
 (Token ((179 0) on_ignored_nl "\n"))
 (Token ((180 0) on_sp "      "))
 (Token ((180 6) on_comment "# Setup the logger\n"))
 (Token ((181 0) on_sp "      "))
 (Token ((181 6) on_kw "if"))
 (Token ((181 8) on_sp " "))
 (Token ((181 9) on_ivar "@options"))
 (Token ((181 17) on_lbracket "["))
 (Token ((181 18) on_symbeg ":"))
 (Token ((181 19) on_ident "quiet"))
 (Token ((181 24) on_rbracket "]"))
 (Token ((181 25) on_nl "\n"))
 (Token ((182 0) on_sp "        "))
 (Token ((182 8) on_const "Logging"))
 (Token ((182 15) on_period "."))
 (Token ((182 16) on_ident "silent"))
 (Token ((182 22) on_sp " "))
 (Token ((182 23) on_op "="))
 (Token ((182 24) on_sp " "))
 (Token ((182 25) on_kw "true"))
 (Token ((182 29) on_nl "\n"))
 (Token ((183 0) on_sp "      "))
 (Token ((183 6) on_kw "else"))
 (Token ((183 10) on_ignored_nl "\n"))
 (Token ((184 0) on_sp "        "))
 (Token ((184 8) on_const "Logging"))
 (Token ((184 15) on_period "."))
 (Token ((184 16) on_ident "level"))
 (Token ((184 21) on_sp " "))
 (Token ((184 22) on_op "="))
 (Token ((184 23) on_sp " "))
 (Token ((184 24) on_const "Logger"))
 (Token ((184 30) on_op "::"))
 (Token ((184 32) on_const "DEBUG"))
 (Token ((184 37) on_sp " "))
 (Token ((184 38) on_kw "if"))
 (Token ((184 40) on_sp " "))
 (Token ((184 41) on_ivar "@options"))
 (Token ((184 49) on_lbracket "["))
 (Token ((184 50) on_symbeg ":"))
 (Token ((184 51) on_ident "debug"))
 (Token ((184 56) on_rbracket "]"))
 (Token ((184 57) on_nl "\n"))
 (Token ((185 0) on_sp "      "))
 (Token ((185 6) on_kw "end"))
 (Token ((185 9) on_nl "\n"))
 (Token ((186 0) on_ignored_nl "\n"))
 (Token ((187 0) on_sp "      "))
 (Token ((187 6) on_kw "if"))
 (Token ((187 8) on_sp " "))
 (Token ((187 9) on_ivar "@options"))
 (Token ((187 17) on_lbracket "["))
 (Token ((187 18) on_symbeg ":"))
 (Token ((187 19) on_ident "trace"))
 (Token ((187 24) on_rbracket "]"))
 (Token ((187 25) on_nl "\n"))
 (Token ((188 0) on_sp "        "))
 (Token ((188 8) on_comment "# Trace raw requests/responses\n"))
 (Token ((189 0) on_sp "        "))
 (Token ((189 8) on_const "Logging"))
 (Token ((189 15) on_period "."))
 (Token ((189 16) on_ident "trace_logger"))
 (Token ((189 28) on_sp " "))
 (Token ((189 29) on_op "="))
 (Token ((189 30) on_sp " "))
 (Token ((189 31) on_const "Logging"))
 (Token ((189 38) on_period "."))
 (Token ((189 39) on_ident "logger"))
 (Token ((189 45) on_nl "\n"))
 (Token ((190 0) on_sp "      "))
 (Token ((190 6) on_kw "end"))
 (Token ((190 9) on_nl "\n"))
 (Token ((191 0) on_ignored_nl "\n"))
 (Token ((192 0) on_sp "      "))
 (Token ((192 6) on_ident "controller"))
 (Token ((192 16) on_sp " "))
 (Token ((192 17) on_op "="))
 (Token ((192 18) on_sp " "))
 (Token ((192 19) on_kw "case"))
 (Token ((192 23) on_ignored_nl "\n"))
 (Token ((193 0) on_sp "      "))
 (Token ((193 6) on_kw "when"))
 (Token ((193 10) on_sp " "))
 (Token ((193 11) on_ident "cluster?"))
 (Token ((193 19) on_sp " "))
 (Token ((193 20) on_kw "then"))
 (Token ((193 24) on_sp " "))
 (Token ((193 25) on_const "Controllers"))
 (Token ((193 36) on_op "::"))
 (Token ((193 38) on_const "Cluster"))
 (Token ((193 45) on_period "."))
 (Token ((193 46) on_ident "new"))
 (Token ((193 49) on_lparen "("))
 (Token ((193 50) on_ivar "@options"))
 (Token ((193 58) on_rparen ")"))
 (Token ((193 59) on_nl "\n"))
 (Token ((194 0) on_sp "      "))
 (Token ((194 6) on_kw "when"))
 (Token ((194 10) on_sp " "))
 (Token ((194 11) on_ident "service?"))
 (Token ((194 19) on_sp " "))
 (Token ((194 20) on_kw "then"))
 (Token ((194 24) on_sp " "))
 (Token ((194 25) on_const "Controllers"))
 (Token ((194 36) on_op "::"))
 (Token ((194 38) on_const "Service"))
 (Token ((194 45) on_period "."))
 (Token ((194 46) on_ident "new"))
 (Token ((194 49) on_lparen "("))
 (Token ((194 50) on_ivar "@options"))
 (Token ((194 58) on_rparen ")"))
 (Token ((194 59) on_nl "\n"))
 (Token ((195 0) on_sp "      "))
 (Token ((195 6) on_kw "else"))
 (Token ((195 10) on_sp "               "))
 (Token ((195 25) on_const "Controllers"))
 (Token ((195 36) on_op "::"))
 (Token ((195 38) on_const "Controller"))
 (Token ((195 48) on_period "."))
 (Token ((195 49) on_ident "new"))
 (Token ((195 52) on_lparen "("))
 (Token ((195 53) on_ivar "@options"))
 (Token ((195 61) on_rparen ")"))
 (Token ((195 62) on_nl "\n"))
 (Token ((196 0) on_sp "      "))
 (Token ((196 6) on_kw "end"))
 (Token ((196 9) on_nl "\n"))
 (Token ((197 0) on_ignored_nl "\n"))
 (Token ((198 0) on_sp "      "))
 (Token ((198 6) on_kw "if"))
 (Token ((198 8) on_sp " "))
 (Token ((198 9) on_ident "controller"))
 (Token ((198 19) on_period "."))
 (Token ((198 20) on_ident "respond_to?"))
 (Token ((198 31) on_lparen "("))
 (Token ((198 32) on_ivar "@command"))
 (Token ((198 40) on_rparen ")"))
 (Token ((198 41) on_nl "\n"))
 (Token ((199 0) on_sp "        "))
 (Token ((199 8) on_kw "begin"))
 (Token ((199 13) on_ignored_nl "\n"))
 (Token ((200 0) on_sp "          "))
 (Token ((200 10) on_ident "controller"))
 (Token ((200 20) on_period "."))
 (Token ((200 21) on_ident "send"))
 (Token ((200 25) on_lparen "("))
 (Token ((200 26) on_ivar "@command"))
 (Token ((200 34) on_comma ","))
 (Token ((200 35) on_sp " "))
 (Token ((200 36) on_op "*"))
 (Token ((200 37) on_ivar "@arguments"))
 (Token ((200 47) on_rparen ")"))
 (Token ((200 48) on_nl "\n"))
 (Token ((201 0) on_sp "        "))
 (Token ((201 8) on_kw "rescue"))
 (Token ((201 14) on_sp " "))
 (Token ((201 15) on_const "RunnerError"))
 (Token ((201 26) on_sp " "))
 (Token ((201 27) on_op "=>"))
 (Token ((201 29) on_sp " "))
 (Token ((201 30) on_ident "e"))
 (Token ((201 31) on_nl "\n"))
 (Token ((202 0) on_sp "          "))
 (Token ((202 10) on_ident "abort"))
 (Token ((202 15) on_sp " "))
 (Token ((202 16) on_ident "e"))
 (Token ((202 17) on_period "."))
 (Token ((202 18) on_ident "message"))
 (Token ((202 25) on_nl "\n"))
 (Token ((203 0) on_sp "        "))
 (Token ((203 8) on_kw "end"))
 (Token ((203 11) on_nl "\n"))
 (Token ((204 0) on_sp "      "))
 (Token ((204 6) on_kw "else"))
 (Token ((204 10) on_ignored_nl "\n"))
 (Token ((205 0) on_sp "        "))
 (Token ((205 8) on_ident "abort"))
 (Token ((205 13) on_sp " "))
 (Token ((205 14) on_tstring_beg "\""))
 (Token ((205 15) on_tstring_content "Invalid options for command: "))
 (Token ((205 44) on_embexpr_beg "\\#{"))
 (Token ((205 46) on_ivar "@command"))
 (Token ((205 54) on_embexpr_end "}"))
 (Token ((205 55) on_tstring_end "\""))
 (Token ((205 56) on_nl "\n"))
 (Token ((206 0) on_sp "      "))
 (Token ((206 6) on_kw "end"))
 (Token ((206 9) on_nl "\n"))
 (Token ((207 0) on_sp "    "))
 (Token ((207 4) on_kw "end"))
 (Token ((207 7) on_nl "\n"))
 (Token ((208 0) on_ignored_nl "\n"))
 (Token ((209 0) on_sp "    "))
 (Token ((209 4) on_comment "# +true+ if we're controlling a cluster.\n"))
 (Token ((210 0) on_sp "    "))
 (Token ((210 4) on_kw "def"))
 (Token ((210 7) on_sp " "))
 (Token ((210 8) on_ident "cluster?"))
 (Token ((210 16) on_nl "\n"))
 (Token ((211 0) on_sp "      "))
 (Token ((211 6) on_ivar "@options"))
 (Token ((211 14) on_lbracket "["))
 (Token ((211 15) on_symbeg ":"))
 (Token ((211 16) on_ident "only"))
 (Token ((211 20) on_rbracket "]"))
 (Token ((211 21) on_sp " "))
 (Token ((211 22) on_op "||"))
 (Token ((211 24) on_sp " "))
 (Token ((211 25) on_ivar "@options"))
 (Token ((211 33) on_lbracket "["))
 (Token ((211 34) on_symbeg ":"))
 (Token ((211 35) on_ident "servers"))
 (Token ((211 42) on_rbracket "]"))
 (Token ((211 43) on_sp " "))
 (Token ((211 44) on_op "||"))
 (Token ((211 46) on_sp " "))
 (Token ((211 47) on_ivar "@options"))
 (Token ((211 55) on_lbracket "["))
 (Token ((211 56) on_symbeg ":"))
 (Token ((211 57) on_ident "config"))
 (Token ((211 63) on_rbracket "]"))
 (Token ((211 64) on_nl "\n"))
 (Token ((212 0) on_sp "    "))
 (Token ((212 4) on_kw "end"))
 (Token ((212 7) on_nl "\n"))
 (Token ((213 0) on_ignored_nl "\n"))
 (Token ((214 0) on_sp "    "))
 (Token ((214 4) on_comment "# +true+ if we're acting a as system service.\n"))
 (Token ((215 0) on_sp "    "))
 (Token ((215 4) on_kw "def"))
 (Token ((215 7) on_sp " "))
 (Token ((215 8) on_ident "service?"))
 (Token ((215 16) on_nl "\n"))
 (Token ((216 0) on_sp "      "))
 (Token ((216 6) on_ivar "@options"))
 (Token ((216 14) on_period "."))
 (Token ((216 15) on_ident "has_key?"))
 (Token ((216 23) on_lparen "("))
 (Token ((216 24) on_symbeg ":"))
 (Token ((216 25) on_ident "all"))
 (Token ((216 28) on_rparen ")"))
 (Token ((216 29) on_sp " "))
 (Token ((216 30) on_op "||"))
 (Token ((216 32) on_sp " "))
 (Token ((216 33) on_ivar "@command"))
 (Token ((216 41) on_sp " "))
 (Token ((216 42) on_op "=="))
 (Token ((216 44) on_sp " "))
 (Token ((216 45) on_tstring_beg "'"))
 (Token ((216 46) on_tstring_content "install"))
 (Token ((216 53) on_tstring_end "'"))
 (Token ((216 54) on_nl "\n"))
 (Token ((217 0) on_sp "    "))
 (Token ((217 4) on_kw "end"))
 (Token ((217 7) on_nl "\n"))
 (Token ((218 0) on_ignored_nl "\n"))
 (Token ((219 0) on_sp "    "))
 (Token ((219 4) on_ident "private"))
 (Token ((219 11) on_nl "\n"))
 (Token ((220 0) on_sp "      "))
 (Token ((220 6) on_kw "def"))
 (Token ((220 9) on_sp " "))
 (Token ((220 10) on_ident "load_options_from_config_file!"))
 (Token ((220 40) on_nl "\n"))
 (Token ((221 0) on_sp "        "))
 (Token ((221 8) on_kw "if"))
 (Token ((221 10) on_sp " "))
 (Token ((221 11) on_ident "file"))
 (Token ((221 15) on_sp " "))
 (Token ((221 16) on_op "="))
 (Token ((221 17) on_sp " "))
 (Token ((221 18) on_ivar "@options"))
 (Token ((221 26) on_period "."))
 (Token ((221 27) on_ident "delete"))
 (Token ((221 33) on_lparen "("))
 (Token ((221 34) on_symbeg ":"))
 (Token ((221 35) on_ident "config"))
 (Token ((221 41) on_rparen ")"))
 (Token ((221 42) on_nl "\n"))
 (Token ((222 0) on_sp "          "))
 (Token ((222 10) on_const "YAML"))
 (Token ((222 14) on_period "."))
 (Token ((222 15) on_ident "load_file"))
 (Token ((222 24) on_lparen "("))
 (Token ((222 25) on_ident "file"))
 (Token ((222 29) on_rparen ")"))
 (Token ((222 30) on_period "."))
 (Token ((222 31) on_ident "each"))
 (Token ((222 35) on_sp " "))
 (Token ((222 36) on_lbrace "{"))
 (Token ((222 37) on_sp " "))
 (Token ((222 38) on_op "|"))
 (Token ((222 39) on_ident "key"))
 (Token ((222 42) on_comma ","))
 (Token ((222 43) on_sp " "))
 (Token ((222 44) on_ident "value"))
 (Token ((222 49) on_op "|"))
 (Token ((222 50) on_sp " "))
 (Token ((222 51) on_ivar "@options"))
 (Token ((222 59) on_lbracket "["))
 (Token ((222 60) on_ident "key"))
 (Token ((222 63) on_period "."))
 (Token ((222 64) on_ident "to_sym"))
 (Token ((222 70) on_rbracket "]"))
 (Token ((222 71) on_sp " "))
 (Token ((222 72) on_op "="))
 (Token ((222 73) on_sp " "))
 (Token ((222 74) on_ident "value"))
 (Token ((222 79) on_sp " "))
 (Token ((222 80) on_rbrace "}"))
 (Token ((222 81) on_nl "\n"))
 (Token ((223 0) on_sp "        "))
 (Token ((223 8) on_kw "end"))
 (Token ((223 11) on_nl "\n"))
 (Token ((224 0) on_sp "      "))
 (Token ((224 6) on_kw "end"))
 (Token ((224 9) on_nl "\n"))
 (Token ((225 0) on_ignored_nl "\n"))
 (Token ((226 0) on_sp "      "))
 (Token ((226 6) on_kw "def"))
 (Token ((226 9) on_sp " "))
 (Token ((226 10) on_ident "ruby_require"))
 (Token ((226 22) on_lparen "("))
 (Token ((226 23) on_ident "file"))
 (Token ((226 27) on_rparen ")"))
 (Token ((226 28) on_ignored_nl "\n"))
 (Token ((227 0) on_sp "        "))
 (Token ((227 8) on_kw "if"))
 (Token ((227 10) on_sp " "))
 (Token ((227 11) on_const "File"))
 (Token ((227 15) on_period "."))
 (Token ((227 16) on_ident "extname"))
 (Token ((227 23) on_lparen "("))
 (Token ((227 24) on_ident "file"))
 (Token ((227 28) on_rparen ")"))
 (Token ((227 29) on_sp " "))
 (Token ((227 30) on_op "=="))
 (Token ((227 32) on_sp " "))
 (Token ((227 33) on_tstring_beg "'"))
 (Token ((227 34) on_tstring_content ".ru"))
 (Token ((227 37) on_tstring_end "'"))
 (Token ((227 38) on_nl "\n"))
 (Token ((228 0) on_sp "          "))
 (Token ((228 10) on_ident "warn"))
 (Token ((228 14) on_sp " "))
 (Token ((228 15) on_tstring_beg "'"))
 (Token
  ((228 16)
   on_tstring_content
   "WARNING: Use the -R option to load a Rack config file"))
 (Token ((228 69) on_tstring_end "'"))
 (Token ((228 70) on_nl "\n"))
 (Token ((229 0) on_sp "          "))
 (Token ((229 10) on_ivar "@options"))
 (Token ((229 18) on_lbracket "["))
 (Token ((229 19) on_symbeg ":"))
 (Token ((229 20) on_ident "rackup"))
 (Token ((229 26) on_rbracket "]"))
 (Token ((229 27) on_sp " "))
 (Token ((229 28) on_op "="))
 (Token ((229 29) on_sp " "))
 (Token ((229 30) on_ident "file"))
 (Token ((229 34) on_nl "\n"))
 (Token ((230 0) on_sp "        "))
 (Token ((230 8) on_kw "else"))
 (Token ((230 12) on_ignored_nl "\n"))
 (Token ((231 0) on_sp "          "))
 (Token ((231 10) on_ident "require"))
 (Token ((231 17) on_sp " "))
 (Token ((231 18) on_ident "file"))
 (Token ((231 22) on_nl "\n"))
 (Token ((232 0) on_sp "        "))
 (Token ((232 8) on_kw "end"))
 (Token ((232 11) on_nl "\n"))
 (Token ((233 0) on_sp "      "))
 (Token ((233 6) on_kw "end"))
 (Token ((233 9) on_nl "\n"))
 (Token ((234 0) on_sp "  "))
 (Token ((234 2) on_kw "end"))
 (Token ((234 5) on_nl "\n"))
 (Token ((235 0) on_kw "end"))
 (Token ((235 3) on_nl "\n")))

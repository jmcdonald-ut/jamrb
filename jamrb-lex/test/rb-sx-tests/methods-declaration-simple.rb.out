((Token ((1 0) on_kw "def"))
 (Token ((1 3) on_sp " "))
 (Token ((1 4) on_ident "simple1"))
 (Token ((1 11) on_nl "\n"))
 (Token ((2 0) on_sp "  "))
 (Token ((2 2) on_ident "puts"))
 (Token ((2 6) on_sp " "))
 (Token ((2 7) on_tstring_beg "\""))
 (Token ((2 8) on_tstring_content "I'm simple1"))
 (Token ((2 19) on_tstring_end "\""))
 (Token ((2 20) on_nl "\n"))
 (Token ((3 0) on_kw "end"))
 (Token ((3 3) on_nl "\n"))
 (Token ((4 0) on_ignored_nl "\n"))
 (Token ((5 0) on_kw "def"))
 (Token ((5 3) on_sp " "))
 (Token ((5 4) on_ident "simple2"))
 (Token ((5 11) on_lparen "("))
 (Token ((5 12) on_rparen ")"))
 (Token ((5 13) on_ignored_nl "\n"))
 (Token ((6 0) on_sp "  "))
 (Token ((6 2) on_ident "puts"))
 (Token ((6 6) on_sp " "))
 (Token ((6 7) on_tstring_beg "\""))
 (Token ((6 8) on_tstring_content "I'm simple2"))
 (Token ((6 19) on_tstring_end "\""))
 (Token ((6 20) on_nl "\n"))
 (Token ((7 0) on_kw "end"))
 (Token ((7 3) on_nl "\n"))
 (Token ((8 0) on_ignored_nl "\n"))
 (Token ((9 0) on_kw "def"))
 (Token ((9 3) on_sp " "))
 (Token ((9 4) on_ident "simple_with_params"))
 (Token ((9 22) on_lparen "("))
 (Token ((9 23) on_ident "foo"))
 (Token ((9 26) on_comma ","))
 (Token ((9 27) on_sp " "))
 (Token ((9 28) on_ident "bar"))
 (Token ((9 31) on_rparen ")"))
 (Token ((9 32) on_ignored_nl "\n"))
 (Token ((10 0) on_sp "  "))
 (Token ((10 2) on_ident "puts"))
 (Token ((10 6) on_sp " "))
 (Token ((10 7) on_tstring_beg "\""))
 (Token ((10 8) on_embexpr_beg "\\#{"))
 (Token ((10 10) on_ident "foo"))
 (Token ((10 13) on_embexpr_end "}"))
 (Token ((10 14) on_tstring_content " "))
 (Token ((10 15) on_embexpr_beg "\\#{"))
 (Token ((10 17) on_ident "bar"))
 (Token ((10 20) on_embexpr_end "}"))
 (Token ((10 21) on_tstring_end "\""))
 (Token ((10 22) on_nl "\n"))
 (Token ((11 0) on_kw "end"))
 (Token ((11 3) on_nl "\n"))
 (Token ((12 0) on_ignored_nl "\n"))
 (Token ((13 0) on_kw "def"))
 (Token ((13 3) on_sp " "))
 (Token ((13 4) on_ident "こんにちは"))
 (Token ((13 19) on_lparen "("))
 (Token ((13 20) on_rparen ")"))
 (Token ((13 21) on_ignored_nl "\n"))
 (Token ((14 0) on_sp "  "))
 (Token ((14 2) on_ident "puts"))
 (Token ((14 6) on_sp " "))
 (Token ((14 7) on_tstring_beg "\""))
 (Token ((14 8) on_tstring_content "I have a cooler name"))
 (Token ((14 28) on_tstring_end "\""))
 (Token ((14 29) on_nl "\n"))
 (Token ((15 0) on_kw "end"))
 (Token ((15 3) on_nl "\n"))
 (Token ((16 0) on_ignored_nl "\n"))
 (Token ((17 0) on_kw "def"))
 (Token ((17 3) on_sp " "))
 (Token ((17 4) on_ident "am_i_valid?"))
 (Token ((17 15) on_lparen "("))
 (Token ((17 16) on_ident "fo"))
 (Token ((17 18) on_comma ","))
 (Token ((17 19) on_sp " "))
 (Token ((17 20) on_ident "sho"))
 (Token ((17 23) on_rparen ")"))
 (Token ((17 24) on_ignored_nl "\n"))
 (Token ((18 0) on_sp "  "))
 (Token ((18 2) on_int "4"))
 (Token ((18 3) on_nl "\n"))
 (Token ((19 0) on_kw "end"))
 (Token ((19 3) on_nl "\n"))
 (Token ((20 0) on_ignored_nl "\n"))
 (Token ((21 0) on_kw "def"))
 (Token ((21 3) on_sp " "))
 (Token ((21 4) on_ident "default_values"))
 (Token ((21 18) on_lparen "("))
 (Token ((21 19) on_ident "f"))
 (Token ((21 20) on_sp " "))
 (Token ((21 21) on_op "="))
 (Token ((21 22) on_sp " "))
 (Token ((21 23) on_int "1"))
 (Token ((21 24) on_rparen ")"))
 (Token ((21 25) on_ignored_nl "\n"))
 (Token ((22 0) on_sp "  "))
 (Token ((22 2) on_ident "f"))
 (Token ((22 3) on_sp " "))
 (Token ((22 4) on_op "+="))
 (Token ((22 6) on_sp " "))
 (Token ((22 7) on_int "1"))
 (Token ((22 8) on_nl "\n"))
 (Token ((23 0) on_kw "end"))
 (Token ((23 3) on_nl "\n")))
